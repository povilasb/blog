<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Povilas Blog (Posts about python)</title><link>http://blog.povilasb.com/</link><description></description><atom:link href="http://blog.povilasb.com/categories/python.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><lastBuildDate>Sun, 11 Dec 2022 18:28:53 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Linux virtual network devices</title><link>http://blog.povilasb.com/posts/linux-virtual-network-devices/</link><dc:creator>Povilas Balciunas</dc:creator><description>&lt;p&gt;Linux allows us to create virtual network devices and control them
programmaticaly. We can read and produce raw IP or Ethernet packets.
Such devices are called TUN or TAP and often referred to as TUN/TAP.
TUN device is used to manipulate IP packets, TAP - Ethernet &lt;a class="footnote-reference brackets" href="http://blog.povilasb.com/posts/linux-virtual-network-devices/#f1" id="footnote-reference-1" role="doc-noteref"&gt;&lt;span class="fn-bracket"&gt;[&lt;/span&gt;1&lt;span class="fn-bracket"&gt;]&lt;/span&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;TUN/TAP has a lot of uses: we can inspect, modify, generate, etc. network
packets. OpenVPN uses TUN/TAP to route all packets through proxy server.
Thus we can use TUN/TAP to create misc VPN services, e.g. IP over DNS &lt;a class="footnote-reference brackets" href="http://blog.povilasb.com/posts/linux-virtual-network-devices/#f2" id="footnote-reference-2" role="doc-noteref"&gt;&lt;span class="fn-bracket"&gt;[&lt;/span&gt;2&lt;span class="fn-bracket"&gt;]&lt;/span&gt;&lt;/a&gt;
&lt;a class="footnote-reference brackets" href="http://blog.povilasb.com/posts/linux-virtual-network-devices/#f3" id="footnote-reference-3" role="doc-noteref"&gt;&lt;span class="fn-bracket"&gt;[&lt;/span&gt;3&lt;span class="fn-bracket"&gt;]&lt;/span&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;section id="overview"&gt;
&lt;h2&gt;Overview&lt;/h2&gt;
&lt;pre class="literal-block"&gt;+------+              +------------+          +------+
| eth0 |  &amp;lt;--------&amp;gt;  | Networking | &amp;lt;------&amp;gt; | tun0 |
+------+              |    stack   |          +------+
                      +------------+             ^
                                                 |
                                                 |
                                                 V
                                          +-------------+
                                          | Application |
                                          +-------------+&lt;/pre&gt;
&lt;p&gt;&lt;cite&gt;tun0&lt;/cite&gt; is virtual network device interface. It acts just like a regular
interface. Except we can hook to it and control it from userspace application.&lt;/p&gt;
&lt;p&gt;When application writes packets to &lt;cite&gt;tun0&lt;/cite&gt;, they will be put to networking
stack and treated as if they came from a regular NIC.
When packets arrive to networking stack with destination address that is
routed to &lt;cite&gt;tun0&lt;/cite&gt;, they will be forwarded to userspace application.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="create-tun-device-from-cli"&gt;
&lt;h2&gt;Create TUN device from CLI&lt;/h2&gt;
&lt;p&gt;We can use &lt;cite&gt;ip&lt;/cite&gt; CLI command to setup the TUN device:&lt;/p&gt;
&lt;pre class="literal-block"&gt;# ip tuntap add mode tun tun0
# ip addr add 10.0.0.1/24 dev tun0
# ip link set tun0 up&lt;/pre&gt;
&lt;p&gt;Then the resulting routing table looks like:&lt;/p&gt;
&lt;pre class="literal-block"&gt;# route -n
Kernel IP routing table
Destination     Gateway         Genmask         Flags Metric Ref    Use Iface
0.0.0.0         192.168.0.1     0.0.0.0         UG    600    0        0 wlp3s0
10.0.0.0        0.0.0.0         255.255.255.0   U     0      0        0 tun0&lt;/pre&gt;
&lt;p&gt;Which means that the packets with destination &lt;cite&gt;10.0.0.X&lt;/cite&gt; will be forwarded
to &lt;cite&gt;tun0&lt;/cite&gt; interface.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="create-tun-device-with-python"&gt;
&lt;h2&gt;Create TUN device with Python&lt;/h2&gt;
&lt;p&gt;The syscalls used by &lt;cite&gt;ip tuntap&lt;/cite&gt; command might be called programmatically from
any language including Python.
To create TUN device we need to open &lt;cite&gt;/dev/net/tun&lt;/cite&gt; and call &lt;a class="reference external" href="https://docs.python.org/3/library/fcntl.html#fcntl.ioctl"&gt;ioctl()&lt;/a&gt; with specific
parameters:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code python"&gt;&lt;a id="rest_code_f394665351d4429b8efa6186a10d9d16-1" name="rest_code_f394665351d4429b8efa6186a10d9d16-1" href="http://blog.povilasb.com/posts/linux-virtual-network-devices/#rest_code_f394665351d4429b8efa6186a10d9d16-1"&gt;&lt;/a&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;
&lt;a id="rest_code_f394665351d4429b8efa6186a10d9d16-2" name="rest_code_f394665351d4429b8efa6186a10d9d16-2" href="http://blog.povilasb.com/posts/linux-virtual-network-devices/#rest_code_f394665351d4429b8efa6186a10d9d16-2"&gt;&lt;/a&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;fcntl&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;ioctl&lt;/span&gt;
&lt;a id="rest_code_f394665351d4429b8efa6186a10d9d16-3" name="rest_code_f394665351d4429b8efa6186a10d9d16-3" href="http://blog.povilasb.com/posts/linux-virtual-network-devices/#rest_code_f394665351d4429b8efa6186a10d9d16-3"&gt;&lt;/a&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;struct&lt;/span&gt;
&lt;a id="rest_code_f394665351d4429b8efa6186a10d9d16-4" name="rest_code_f394665351d4429b8efa6186a10d9d16-4" href="http://blog.povilasb.com/posts/linux-virtual-network-devices/#rest_code_f394665351d4429b8efa6186a10d9d16-4"&gt;&lt;/a&gt;
&lt;a id="rest_code_f394665351d4429b8efa6186a10d9d16-5" name="rest_code_f394665351d4429b8efa6186a10d9d16-5" href="http://blog.povilasb.com/posts/linux-virtual-network-devices/#rest_code_f394665351d4429b8efa6186a10d9d16-5"&gt;&lt;/a&gt;&lt;span class="n"&gt;TUNSETIFF&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mh"&gt;0x400454ca&lt;/span&gt;
&lt;a id="rest_code_f394665351d4429b8efa6186a10d9d16-6" name="rest_code_f394665351d4429b8efa6186a10d9d16-6" href="http://blog.povilasb.com/posts/linux-virtual-network-devices/#rest_code_f394665351d4429b8efa6186a10d9d16-6"&gt;&lt;/a&gt;&lt;span class="n"&gt;IFF_TUN&lt;/span&gt;   &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mh"&gt;0x0001&lt;/span&gt;
&lt;a id="rest_code_f394665351d4429b8efa6186a10d9d16-7" name="rest_code_f394665351d4429b8efa6186a10d9d16-7" href="http://blog.povilasb.com/posts/linux-virtual-network-devices/#rest_code_f394665351d4429b8efa6186a10d9d16-7"&gt;&lt;/a&gt;&lt;span class="n"&gt;IFF_NO_PI&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mh"&gt;0x1000&lt;/span&gt;
&lt;a id="rest_code_f394665351d4429b8efa6186a10d9d16-8" name="rest_code_f394665351d4429b8efa6186a10d9d16-8" href="http://blog.povilasb.com/posts/linux-virtual-network-devices/#rest_code_f394665351d4429b8efa6186a10d9d16-8"&gt;&lt;/a&gt;
&lt;a id="rest_code_f394665351d4429b8efa6186a10d9d16-9" name="rest_code_f394665351d4429b8efa6186a10d9d16-9" href="http://blog.povilasb.com/posts/linux-virtual-network-devices/#rest_code_f394665351d4429b8efa6186a10d9d16-9"&gt;&lt;/a&gt;&lt;span class="n"&gt;ftun&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"/dev/net/tun"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;O_RDWR&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_f394665351d4429b8efa6186a10d9d16-10" name="rest_code_f394665351d4429b8efa6186a10d9d16-10" href="http://blog.povilasb.com/posts/linux-virtual-network-devices/#rest_code_f394665351d4429b8efa6186a10d9d16-10"&gt;&lt;/a&gt;&lt;span class="n"&gt;ioctl&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ftun&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;TUNSETIFF&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;struct&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pack&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"16sH"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="sa"&gt;b&lt;/span&gt;&lt;span class="s2"&gt;"tun0"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;IFF_TUN&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;IFF_NO_PI&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;However, this is pretty low level and suits my learning needs very well.
Although, we can definitely find some python libraries for this &lt;a class="footnote-reference brackets" href="http://blog.povilasb.com/posts/linux-virtual-network-devices/#f5" id="footnote-reference-4" role="doc-noteref"&gt;&lt;span class="fn-bracket"&gt;[&lt;/span&gt;5&lt;span class="fn-bracket"&gt;]&lt;/span&gt;&lt;/a&gt; &lt;a class="footnote-reference brackets" href="http://blog.povilasb.com/posts/linux-virtual-network-devices/#f6" id="footnote-reference-5" role="doc-noteref"&gt;&lt;span class="fn-bracket"&gt;[&lt;/span&gt;6&lt;span class="fn-bracket"&gt;]&lt;/span&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Also, we can programmatically set up routes using &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Netlink"&gt;Netlink&lt;/a&gt; based protocols.
Fortunately there's a python package &lt;a class="reference external" href="https://pypi.python.org/pypi/pyroute2"&gt;pyroute2&lt;/a&gt; implementing Netlink.
For example we can assign an IP address to TUN interface and bring up:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code python"&gt;&lt;a id="rest_code_9a388a58603f4de69a63c2da77ef3b64-1" name="rest_code_9a388a58603f4de69a63c2da77ef3b64-1" href="http://blog.povilasb.com/posts/linux-virtual-network-devices/#rest_code_9a388a58603f4de69a63c2da77ef3b64-1"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# pip install pyroute2==0.4.19&lt;/span&gt;
&lt;a id="rest_code_9a388a58603f4de69a63c2da77ef3b64-2" name="rest_code_9a388a58603f4de69a63c2da77ef3b64-2" href="http://blog.povilasb.com/posts/linux-virtual-network-devices/#rest_code_9a388a58603f4de69a63c2da77ef3b64-2"&gt;&lt;/a&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;pyroute2&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;IPRoute&lt;/span&gt;
&lt;a id="rest_code_9a388a58603f4de69a63c2da77ef3b64-3" name="rest_code_9a388a58603f4de69a63c2da77ef3b64-3" href="http://blog.povilasb.com/posts/linux-virtual-network-devices/#rest_code_9a388a58603f4de69a63c2da77ef3b64-3"&gt;&lt;/a&gt;
&lt;a id="rest_code_9a388a58603f4de69a63c2da77ef3b64-4" name="rest_code_9a388a58603f4de69a63c2da77ef3b64-4" href="http://blog.povilasb.com/posts/linux-virtual-network-devices/#rest_code_9a388a58603f4de69a63c2da77ef3b64-4"&gt;&lt;/a&gt;&lt;span class="n"&gt;ip&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;IPRoute&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a id="rest_code_9a388a58603f4de69a63c2da77ef3b64-5" name="rest_code_9a388a58603f4de69a63c2da77ef3b64-5" href="http://blog.povilasb.com/posts/linux-virtual-network-devices/#rest_code_9a388a58603f4de69a63c2da77ef3b64-5"&gt;&lt;/a&gt;&lt;span class="n"&gt;idx&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ip&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;link_lookup&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ifname&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'tun0'&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;a id="rest_code_9a388a58603f4de69a63c2da77ef3b64-6" name="rest_code_9a388a58603f4de69a63c2da77ef3b64-6" href="http://blog.povilasb.com/posts/linux-virtual-network-devices/#rest_code_9a388a58603f4de69a63c2da77ef3b64-6"&gt;&lt;/a&gt;&lt;span class="n"&gt;ip&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;addr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'add'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;idx&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;address&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'10.0.0.1'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;prefixlen&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;24&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_9a388a58603f4de69a63c2da77ef3b64-7" name="rest_code_9a388a58603f4de69a63c2da77ef3b64-7" href="http://blog.povilasb.com/posts/linux-virtual-network-devices/#rest_code_9a388a58603f4de69a63c2da77ef3b64-7"&gt;&lt;/a&gt;&lt;span class="n"&gt;ip&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;link&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'set'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;idx&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;state&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'up'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_9a388a58603f4de69a63c2da77ef3b64-8" name="rest_code_9a388a58603f4de69a63c2da77ef3b64-8" href="http://blog.povilasb.com/posts/linux-virtual-network-devices/#rest_code_9a388a58603f4de69a63c2da77ef3b64-8"&gt;&lt;/a&gt;&lt;span class="n"&gt;ip&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/section&gt;
&lt;section id="controlling-tun-tap-device"&gt;
&lt;h2&gt;Controlling TUN/TAP device&lt;/h2&gt;
&lt;p&gt;Once we have created and enabled &lt;cite&gt;tun0&lt;/cite&gt; interface we can receive and send
raw IP or Ethernet packets, respectively.&lt;/p&gt;
&lt;section id="receiving-packets"&gt;
&lt;h3&gt;Receiving packets&lt;/h3&gt;
&lt;p&gt;Let's start sending ICMP requests to &lt;cite&gt;10.0.0.4&lt;/cite&gt; which gets routed to our
TUN device:&lt;/p&gt;
&lt;pre class="literal-block"&gt;$ route -n
Kernel IP routing table
Destination     Gateway         Genmask         Flags Metric Ref    Use Iface
0.0.0.0         192.168.0.1     0.0.0.0         UG    600    0        0 wlp3s0
10.0.0.0        0.0.0.0         255.255.255.0   U     0      0        0 tun0
192.168.0.0     0.0.0.0         255.255.255.0   U     600    0        0 wlp3s0

$ ping 10.0.0.4&lt;/pre&gt;
&lt;p&gt;Then we can receive those packets with a simple read:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code python"&gt;&lt;a id="rest_code_25edf3f069ce494a89fa3d6c32920f82-1" name="rest_code_25edf3f069ce494a89fa3d6c32920f82-1" href="http://blog.povilasb.com/posts/linux-virtual-network-devices/#rest_code_25edf3f069ce494a89fa3d6c32920f82-1"&gt;&lt;/a&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;
&lt;a id="rest_code_25edf3f069ce494a89fa3d6c32920f82-2" name="rest_code_25edf3f069ce494a89fa3d6c32920f82-2" href="http://blog.povilasb.com/posts/linux-virtual-network-devices/#rest_code_25edf3f069ce494a89fa3d6c32920f82-2"&gt;&lt;/a&gt;
&lt;a id="rest_code_25edf3f069ce494a89fa3d6c32920f82-3" name="rest_code_25edf3f069ce494a89fa3d6c32920f82-3" href="http://blog.povilasb.com/posts/linux-virtual-network-devices/#rest_code_25edf3f069ce494a89fa3d6c32920f82-3"&gt;&lt;/a&gt;&lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a id="rest_code_25edf3f069ce494a89fa3d6c32920f82-4" name="rest_code_25edf3f069ce494a89fa3d6c32920f82-4" href="http://blog.povilasb.com/posts/linux-virtual-network-devices/#rest_code_25edf3f069ce494a89fa3d6c32920f82-4"&gt;&lt;/a&gt;    &lt;span class="n"&gt;raw_packet&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ftun&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1500&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# we get ftun descriptor by opening /dev/net/tun&lt;/span&gt;
&lt;a id="rest_code_25edf3f069ce494a89fa3d6c32920f82-5" name="rest_code_25edf3f069ce494a89fa3d6c32920f82-5" href="http://blog.povilasb.com/posts/linux-virtual-network-devices/#rest_code_25edf3f069ce494a89fa3d6c32920f82-5"&gt;&lt;/a&gt;    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;raw_packet&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The output is something like:&lt;/p&gt;
&lt;pre class="literal-block"&gt;b'E\x00\x00T\xef]@\x00@\x017G\n\x00\x00\x01\n\x00\x00\x04\x08\x00M\xef%\xc2\x00\x05As\x9dY\x00\x00\x00\x00\xe1\xa9\x05\x00\x00\x00\x00\x00\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1a\x1b\x1c\x1d\x1e\x1f !"#$%&amp;amp;\'()*+,-./01234567&lt;/pre&gt;
&lt;p&gt;which is a raw IP packet with ICMP packet as data.&lt;/p&gt;
&lt;p&gt;By the way, seems like Linux kernel is sending &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Simple_Service_Discovery_Protocol"&gt;SSDP&lt;/a&gt; packets
to the TUN interface. So don't get suprised to see some unexpected traffic.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="sending-packets"&gt;
&lt;h3&gt;Sending packets&lt;/h3&gt;
&lt;p&gt;To send raw IP packets we write them to TUN interface:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code python"&gt;&lt;a id="rest_code_9ab1a45893dc453c829b03625a180235-1" name="rest_code_9ab1a45893dc453c829b03625a180235-1" href="http://blog.povilasb.com/posts/linux-virtual-network-devices/#rest_code_9ab1a45893dc453c829b03625a180235-1"&gt;&lt;/a&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;
&lt;a id="rest_code_9ab1a45893dc453c829b03625a180235-2" name="rest_code_9ab1a45893dc453c829b03625a180235-2" href="http://blog.povilasb.com/posts/linux-virtual-network-devices/#rest_code_9ab1a45893dc453c829b03625a180235-2"&gt;&lt;/a&gt;
&lt;a id="rest_code_9ab1a45893dc453c829b03625a180235-3" name="rest_code_9ab1a45893dc453c829b03625a180235-3" href="http://blog.povilasb.com/posts/linux-virtual-network-devices/#rest_code_9ab1a45893dc453c829b03625a180235-3"&gt;&lt;/a&gt;&lt;span class="n"&gt;icmp_req&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="sa"&gt;b&lt;/span&gt;&lt;span class="s1"&gt;'E&lt;/span&gt;&lt;span class="se"&gt;\x00\x00&lt;/span&gt;&lt;span class="s1"&gt;(&lt;/span&gt;&lt;span class="se"&gt;\x00\x00\x00\x00&lt;/span&gt;&lt;span class="s1"&gt;@&lt;/span&gt;&lt;span class="se"&gt;\x01&lt;/span&gt;&lt;span class="s1"&gt;`&lt;/span&gt;&lt;span class="se"&gt;\xc2\n\x00\x00\x04\x08\x08&lt;/span&gt;&lt;span class="s1"&gt;'&lt;/span&gt;\
&lt;a id="rest_code_9ab1a45893dc453c829b03625a180235-4" name="rest_code_9ab1a45893dc453c829b03625a180235-4" href="http://blog.povilasb.com/posts/linux-virtual-network-devices/#rest_code_9ab1a45893dc453c829b03625a180235-4"&gt;&lt;/a&gt;    &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="se"&gt;\x08\x08\x08\x00\x0f\xaa\x00&lt;/span&gt;&lt;span class="s1"&gt;{&lt;/span&gt;&lt;span class="se"&gt;\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span&gt;&lt;span class="s1"&gt;test'&lt;/span&gt;
&lt;a id="rest_code_9ab1a45893dc453c829b03625a180235-5" name="rest_code_9ab1a45893dc453c829b03625a180235-5" href="http://blog.povilasb.com/posts/linux-virtual-network-devices/#rest_code_9ab1a45893dc453c829b03625a180235-5"&gt;&lt;/a&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ftun&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;icmp_req&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;By the way, we can use &lt;a class="reference external" href="https://github.com/mike01/pypacker"&gt;pypacker&lt;/a&gt; to
construct and parse raw packets.&lt;/p&gt;
&lt;/section&gt;
&lt;/section&gt;
&lt;section id="prerequisites"&gt;
&lt;h2&gt;Prerequisites&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;To use TUN/TAP devices python scripts must be run with root permissions.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;To forward packets from TUN/TAP to other interfaces (&lt;cite&gt;eth0&lt;/cite&gt;), packet forwarding
must be enabled:&lt;/p&gt;
&lt;pre class="literal-block"&gt;# echo 1 &amp;gt; /proc/sys/net/ipv4/ip_forward
# iptables -P FORWARD ACCEPT&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;To properly route outgoing packets NAT must be enabled:&lt;/p&gt;
&lt;pre class="literal-block"&gt;# iptables -t nat -A POSTROUTING -s 10.0.0.0/24 -j MASQUERADE&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p class="rubric"&gt;References&lt;/p&gt;
&lt;aside class="footnote-list brackets"&gt;
&lt;aside class="footnote brackets" id="f1" role="note"&gt;
&lt;span class="label"&gt;&lt;span class="fn-bracket"&gt;[&lt;/span&gt;&lt;a role="doc-backlink" href="http://blog.povilasb.com/posts/linux-virtual-network-devices/#footnote-reference-1"&gt;1&lt;/a&gt;&lt;span class="fn-bracket"&gt;]&lt;/span&gt;&lt;/span&gt;
&lt;p&gt;&lt;a class="reference external" href="https://www.kernel.org/doc/Documentation/networking/tuntap.txt"&gt;https://www.kernel.org/doc/Documentation/networking/tuntap.txt&lt;/a&gt;&lt;/p&gt;
&lt;/aside&gt;
&lt;aside class="footnote brackets" id="f2" role="note"&gt;
&lt;span class="label"&gt;&lt;span class="fn-bracket"&gt;[&lt;/span&gt;&lt;a role="doc-backlink" href="http://blog.povilasb.com/posts/linux-virtual-network-devices/#footnote-reference-2"&gt;2&lt;/a&gt;&lt;span class="fn-bracket"&gt;]&lt;/span&gt;&lt;/span&gt;
&lt;p&gt;&lt;a class="reference external" href="http://code.kryo.se/iodine/"&gt;http://code.kryo.se/iodine/&lt;/a&gt;&lt;/p&gt;
&lt;/aside&gt;
&lt;aside class="footnote brackets" id="f3" role="note"&gt;
&lt;span class="label"&gt;&lt;span class="fn-bracket"&gt;[&lt;/span&gt;&lt;a role="doc-backlink" href="http://blog.povilasb.com/posts/linux-virtual-network-devices/#footnote-reference-3"&gt;3&lt;/a&gt;&lt;span class="fn-bracket"&gt;]&lt;/span&gt;&lt;/span&gt;
&lt;p&gt;&lt;a class="reference external" href="http://cs.brown.edu/courses/cs168/s11/handouts/dtun.pdf"&gt;http://cs.brown.edu/courses/cs168/s11/handouts/dtun.pdf&lt;/a&gt;&lt;/p&gt;
&lt;/aside&gt;
&lt;aside class="footnote brackets" id="f4" role="note"&gt;
&lt;span class="label"&gt;&lt;span class="fn-bracket"&gt;[&lt;/span&gt;4&lt;span class="fn-bracket"&gt;]&lt;/span&gt;&lt;/span&gt;
&lt;p&gt;&lt;a class="reference external" href="http://backreference.org/2010/03/26/tuntap-interface-tutorial/"&gt;http://backreference.org/2010/03/26/tuntap-interface-tutorial/&lt;/a&gt;&lt;/p&gt;
&lt;/aside&gt;
&lt;aside class="footnote brackets" id="f5" role="note"&gt;
&lt;span class="label"&gt;&lt;span class="fn-bracket"&gt;[&lt;/span&gt;&lt;a role="doc-backlink" href="http://blog.povilasb.com/posts/linux-virtual-network-devices/#footnote-reference-4"&gt;5&lt;/a&gt;&lt;span class="fn-bracket"&gt;]&lt;/span&gt;&lt;/span&gt;
&lt;p&gt;&lt;a class="reference external" href="https://github.com/montag451/pytun"&gt;https://github.com/montag451/pytun&lt;/a&gt;&lt;/p&gt;
&lt;/aside&gt;
&lt;aside class="footnote brackets" id="f6" role="note"&gt;
&lt;span class="label"&gt;&lt;span class="fn-bracket"&gt;[&lt;/span&gt;&lt;a role="doc-backlink" href="http://blog.povilasb.com/posts/linux-virtual-network-devices/#footnote-reference-5"&gt;6&lt;/a&gt;&lt;span class="fn-bracket"&gt;]&lt;/span&gt;&lt;/span&gt;
&lt;p&gt;&lt;a class="reference external" href="https://github.com/Gawen/pytun"&gt;https://github.com/Gawen/pytun&lt;/a&gt;&lt;/p&gt;
&lt;/aside&gt;
&lt;/aside&gt;
&lt;/section&gt;</description><category>linux</category><category>networking</category><category>python</category><category>tap</category><category>tun</category><guid>http://blog.povilasb.com/posts/linux-virtual-network-devices/</guid><pubDate>Tue, 22 Aug 2017 18:28:32 GMT</pubDate></item><item><title>Building PyPy is easy</title><link>http://blog.povilasb.com/posts/building-pypy-is-easy/</link><dc:creator>Povilas Balciunas</dc:creator><description>&lt;p&gt;The moment I saw a &lt;a class="reference external" href="https://morepypy.blogspot.lt/2017/03/async-http-benchmarks-on-pypy3.html?spref=tw"&gt;benchmark on PyPy 3.5&lt;/a&gt;
I was eager to test it.
PyPy 3.5 support is still in development so I had to build it before trying it.&lt;/p&gt;
&lt;p&gt;PyPy is hosted on bitbucket &lt;a class="reference external" href="https://bitbucket.org/pypy/pypy"&gt;https://bitbucket.org/pypy/pypy&lt;/a&gt; and thus requires
mercurial to clone it:&lt;/p&gt;
&lt;pre class="literal-block"&gt;$ apt install mercurial
$ hg clone https://bitbucket.org/pypy/pypy&lt;/pre&gt;
&lt;p&gt;Now let's checkout the &lt;cite&gt;py3.5&lt;/cite&gt; branch:&lt;/p&gt;
&lt;pre class="literal-block"&gt;$ cd pypy
$ hg up py3.5&lt;/pre&gt;
&lt;p&gt;Before building the &lt;cite&gt;pypy&lt;/cite&gt; I had some missing dependencies on my Debian 8
system:&lt;/p&gt;
&lt;pre class="literal-block"&gt;$ apt install pypy libbz2-dev libexpat1-dev libffi-dev pkg-config libncurses5-dev&lt;/pre&gt;
&lt;p&gt;Yes, &lt;cite&gt;pypy&lt;/cite&gt; build process requires an older version of &lt;cite&gt;pypy&lt;/cite&gt; :D
Although, docs say that &lt;a class="reference external" href="http://doc.pypy.org/en/latest/build.html"&gt;it should be possible to build i with CPython&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Anyway, now we're ready to build the &lt;cite&gt;pypy&lt;/cite&gt; and that's as easy as executing:&lt;/p&gt;
&lt;pre class="literal-block"&gt;$ rpython/bin/rpython -Ojit pypy/goal/targetpypystandalone.py&lt;/pre&gt;
&lt;p&gt;Eventually, on my computer after 37 minutes, there will be &lt;cite&gt;pypy-c&lt;/cite&gt; which
is your Python interpreter/JIT.&lt;/p&gt;</description><category>pypy</category><category>python</category><guid>http://blog.povilasb.com/posts/building-pypy-is-easy/</guid><pubDate>Fri, 03 Mar 2017 05:35:21 GMT</pubDate></item><item><title>Python asyncio vs nginx performance</title><link>http://blog.povilasb.com/posts/python-asyncio-vs-nginx-performance/</link><dc:creator>Povilas Balciunas</dc:creator><description>&lt;p&gt;While I was playing with Python asyncio I got interested in how well
it performs serving data over TLS compared to Nginx.
So I implemented a small HTTPS server with asyncio:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code python"&gt;&lt;a id="rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-1" name="rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-1" href="http://blog.povilasb.com/posts/python-asyncio-vs-nginx-performance/#rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-1"&gt;&lt;/a&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;asyncio&lt;/span&gt;
&lt;a id="rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-2" name="rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-2" href="http://blog.povilasb.com/posts/python-asyncio-vs-nginx-performance/#rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-2"&gt;&lt;/a&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;ssl&lt;/span&gt;
&lt;a id="rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-3" name="rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-3" href="http://blog.povilasb.com/posts/python-asyncio-vs-nginx-performance/#rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-3"&gt;&lt;/a&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;random&lt;/span&gt;
&lt;a id="rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-4" name="rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-4" href="http://blog.povilasb.com/posts/python-asyncio-vs-nginx-performance/#rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-4"&gt;&lt;/a&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;string&lt;/span&gt;
&lt;a id="rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-5" name="rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-5" href="http://blog.povilasb.com/posts/python-asyncio-vs-nginx-performance/#rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-5"&gt;&lt;/a&gt;
&lt;a id="rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-6" name="rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-6" href="http://blog.povilasb.com/posts/python-asyncio-vs-nginx-performance/#rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-6"&gt;&lt;/a&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;uvloop&lt;/span&gt;
&lt;a id="rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-7" name="rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-7" href="http://blog.povilasb.com/posts/python-asyncio-vs-nginx-performance/#rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-7"&gt;&lt;/a&gt;
&lt;a id="rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-8" name="rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-8" href="http://blog.povilasb.com/posts/python-asyncio-vs-nginx-performance/#rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-8"&gt;&lt;/a&gt;
&lt;a id="rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-9" name="rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-9" href="http://blog.povilasb.com/posts/python-asyncio-vs-nginx-performance/#rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-9"&gt;&lt;/a&gt;&lt;span class="n"&gt;content_20k&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;''&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;choice&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ascii_uppercase&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;digits&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-10" name="rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-10" href="http://blog.povilasb.com/posts/python-asyncio-vs-nginx-performance/#rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-10"&gt;&lt;/a&gt;                      &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;_&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;1024&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;a id="rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-11" name="rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-11" href="http://blog.povilasb.com/posts/python-asyncio-vs-nginx-performance/#rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-11"&gt;&lt;/a&gt;&lt;span class="n"&gt;resp_lines&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
&lt;a id="rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-12" name="rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-12" href="http://blog.povilasb.com/posts/python-asyncio-vs-nginx-performance/#rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-12"&gt;&lt;/a&gt;    &lt;span class="s1"&gt;'HTTP/1.1 200 OK'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a id="rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-13" name="rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-13" href="http://blog.povilasb.com/posts/python-asyncio-vs-nginx-performance/#rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-13"&gt;&lt;/a&gt;    &lt;span class="s1"&gt;'Connection: close'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a id="rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-14" name="rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-14" href="http://blog.povilasb.com/posts/python-asyncio-vs-nginx-performance/#rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-14"&gt;&lt;/a&gt;    &lt;span class="s1"&gt;''&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a id="rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-15" name="rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-15" href="http://blog.povilasb.com/posts/python-asyncio-vs-nginx-performance/#rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-15"&gt;&lt;/a&gt;    &lt;span class="s1"&gt;''&lt;/span&gt;
&lt;a id="rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-16" name="rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-16" href="http://blog.povilasb.com/posts/python-asyncio-vs-nginx-performance/#rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-16"&gt;&lt;/a&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;a id="rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-17" name="rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-17" href="http://blog.povilasb.com/posts/python-asyncio-vs-nginx-performance/#rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-17"&gt;&lt;/a&gt;&lt;span class="n"&gt;resp_20k&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;bytes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="se"&gt;\r\n&lt;/span&gt;&lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;resp_lines&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;content_20k&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'latin-1'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-18" name="rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-18" href="http://blog.povilasb.com/posts/python-asyncio-vs-nginx-performance/#rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-18"&gt;&lt;/a&gt;
&lt;a id="rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-19" name="rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-19" href="http://blog.povilasb.com/posts/python-asyncio-vs-nginx-performance/#rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-19"&gt;&lt;/a&gt;
&lt;a id="rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-20" name="rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-20" href="http://blog.povilasb.com/posts/python-asyncio-vs-nginx-performance/#rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-20"&gt;&lt;/a&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;HttpServerProtocol&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;asyncio&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Protocol&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a id="rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-21" name="rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-21" href="http://blog.povilasb.com/posts/python-asyncio-vs-nginx-performance/#rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-21"&gt;&lt;/a&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="kc"&gt;None&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a id="rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-22" name="rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-22" href="http://blog.povilasb.com/posts/python-asyncio-vs-nginx-performance/#rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-22"&gt;&lt;/a&gt;        &lt;span class="nb"&gt;super&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="fm"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a id="rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-23" name="rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-23" href="http://blog.povilasb.com/posts/python-asyncio-vs-nginx-performance/#rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-23"&gt;&lt;/a&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_transport&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;None&lt;/span&gt;
&lt;a id="rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-24" name="rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-24" href="http://blog.povilasb.com/posts/python-asyncio-vs-nginx-performance/#rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-24"&gt;&lt;/a&gt;
&lt;a id="rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-25" name="rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-25" href="http://blog.povilasb.com/posts/python-asyncio-vs-nginx-performance/#rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-25"&gt;&lt;/a&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;request_received&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="kc"&gt;None&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a id="rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-26" name="rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-26" href="http://blog.povilasb.com/posts/python-asyncio-vs-nginx-performance/#rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-26"&gt;&lt;/a&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_transport&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;bytes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;resp_20k&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;a id="rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-27" name="rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-27" href="http://blog.povilasb.com/posts/python-asyncio-vs-nginx-performance/#rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-27"&gt;&lt;/a&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_transport&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a id="rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-28" name="rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-28" href="http://blog.povilasb.com/posts/python-asyncio-vs-nginx-performance/#rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-28"&gt;&lt;/a&gt;
&lt;a id="rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-29" name="rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-29" href="http://blog.povilasb.com/posts/python-asyncio-vs-nginx-performance/#rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-29"&gt;&lt;/a&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;data_received&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;bytes&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="kc"&gt;None&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a id="rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-30" name="rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-30" href="http://blog.povilasb.com/posts/python-asyncio-vs-nginx-performance/#rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-30"&gt;&lt;/a&gt;        &lt;span class="c1"&gt;# Let's assume request is complete.&lt;/span&gt;
&lt;a id="rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-31" name="rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-31" href="http://blog.povilasb.com/posts/python-asyncio-vs-nginx-performance/#rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-31"&gt;&lt;/a&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;request_received&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a id="rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-32" name="rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-32" href="http://blog.povilasb.com/posts/python-asyncio-vs-nginx-performance/#rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-32"&gt;&lt;/a&gt;
&lt;a id="rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-33" name="rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-33" href="http://blog.povilasb.com/posts/python-asyncio-vs-nginx-performance/#rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-33"&gt;&lt;/a&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;connection_made&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;transport&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="kc"&gt;None&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a id="rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-34" name="rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-34" href="http://blog.povilasb.com/posts/python-asyncio-vs-nginx-performance/#rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-34"&gt;&lt;/a&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_transport&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;transport&lt;/span&gt;
&lt;a id="rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-35" name="rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-35" href="http://blog.povilasb.com/posts/python-asyncio-vs-nginx-performance/#rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-35"&gt;&lt;/a&gt;
&lt;a id="rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-36" name="rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-36" href="http://blog.povilasb.com/posts/python-asyncio-vs-nginx-performance/#rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-36"&gt;&lt;/a&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;close&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a id="rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-37" name="rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-37" href="http://blog.povilasb.com/posts/python-asyncio-vs-nginx-performance/#rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-37"&gt;&lt;/a&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_transport&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a id="rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-38" name="rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-38" href="http://blog.povilasb.com/posts/python-asyncio-vs-nginx-performance/#rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-38"&gt;&lt;/a&gt;
&lt;a id="rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-39" name="rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-39" href="http://blog.povilasb.com/posts/python-asyncio-vs-nginx-performance/#rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-39"&gt;&lt;/a&gt;&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;start_https_server&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;loop&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a id="rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-40" name="rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-40" href="http://blog.povilasb.com/posts/python-asyncio-vs-nginx-performance/#rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-40"&gt;&lt;/a&gt;    &lt;span class="n"&gt;tls_ctx&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;make_tls_context&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a id="rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-41" name="rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-41" href="http://blog.povilasb.com/posts/python-asyncio-vs-nginx-performance/#rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-41"&gt;&lt;/a&gt;    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;loop&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;create_server&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
&lt;a id="rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-42" name="rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-42" href="http://blog.povilasb.com/posts/python-asyncio-vs-nginx-performance/#rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-42"&gt;&lt;/a&gt;        &lt;span class="k"&gt;lambda&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;asyncio&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sslproto&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SSLProtocol&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
&lt;a id="rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-43" name="rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-43" href="http://blog.povilasb.com/posts/python-asyncio-vs-nginx-performance/#rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-43"&gt;&lt;/a&gt;            &lt;span class="n"&gt;loop&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;HttpServerProtocol&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;tls_ctx&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;server_side&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
&lt;a id="rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-44" name="rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-44" href="http://blog.povilasb.com/posts/python-asyncio-vs-nginx-performance/#rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-44"&gt;&lt;/a&gt;        &lt;span class="s1"&gt;'0.0.0.0'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;8082&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;backlog&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;65535&lt;/span&gt;
&lt;a id="rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-45" name="rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-45" href="http://blog.povilasb.com/posts/python-asyncio-vs-nginx-performance/#rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-45"&gt;&lt;/a&gt;    &lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-46" name="rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-46" href="http://blog.povilasb.com/posts/python-asyncio-vs-nginx-performance/#rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-46"&gt;&lt;/a&gt;
&lt;a id="rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-47" name="rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-47" href="http://blog.povilasb.com/posts/python-asyncio-vs-nginx-performance/#rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-47"&gt;&lt;/a&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;make_tls_context&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
&lt;a id="rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-48" name="rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-48" href="http://blog.povilasb.com/posts/python-asyncio-vs-nginx-performance/#rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-48"&gt;&lt;/a&gt;    &lt;span class="n"&gt;ctx&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ssl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SSLContext&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ssl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;PROTOCOL_TLS&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-49" name="rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-49" href="http://blog.povilasb.com/posts/python-asyncio-vs-nginx-performance/#rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-49"&gt;&lt;/a&gt;    &lt;span class="n"&gt;ctx&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;load_cert_chain&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
&lt;a id="rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-50" name="rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-50" href="http://blog.povilasb.com/posts/python-asyncio-vs-nginx-performance/#rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-50"&gt;&lt;/a&gt;        &lt;span class="n"&gt;certfile&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'example.com.crt'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a id="rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-51" name="rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-51" href="http://blog.povilasb.com/posts/python-asyncio-vs-nginx-performance/#rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-51"&gt;&lt;/a&gt;        &lt;span class="n"&gt;keyfile&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'https.key.pem'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a id="rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-52" name="rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-52" href="http://blog.povilasb.com/posts/python-asyncio-vs-nginx-performance/#rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-52"&gt;&lt;/a&gt;    &lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-53" name="rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-53" href="http://blog.povilasb.com/posts/python-asyncio-vs-nginx-performance/#rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-53"&gt;&lt;/a&gt;    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;ctx&lt;/span&gt;
&lt;a id="rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-54" name="rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-54" href="http://blog.povilasb.com/posts/python-asyncio-vs-nginx-performance/#rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-54"&gt;&lt;/a&gt;
&lt;a id="rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-55" name="rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-55" href="http://blog.povilasb.com/posts/python-asyncio-vs-nginx-performance/#rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-55"&gt;&lt;/a&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
&lt;a id="rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-56" name="rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-56" href="http://blog.povilasb.com/posts/python-asyncio-vs-nginx-performance/#rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-56"&gt;&lt;/a&gt;    &lt;span class="n"&gt;asyncio&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_event_loop_policy&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;uvloop&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;EventLoopPolicy&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;a id="rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-57" name="rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-57" href="http://blog.povilasb.com/posts/python-asyncio-vs-nginx-performance/#rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-57"&gt;&lt;/a&gt;    &lt;span class="n"&gt;loop&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;asyncio&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;new_event_loop&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a id="rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-58" name="rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-58" href="http://blog.povilasb.com/posts/python-asyncio-vs-nginx-performance/#rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-58"&gt;&lt;/a&gt;    &lt;span class="n"&gt;loop&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;run_until_complete&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;start_https_server&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;loop&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;a id="rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-59" name="rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-59" href="http://blog.povilasb.com/posts/python-asyncio-vs-nginx-performance/#rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-59"&gt;&lt;/a&gt;    &lt;span class="n"&gt;loop&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;run_forever&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a id="rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-60" name="rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-60" href="http://blog.povilasb.com/posts/python-asyncio-vs-nginx-performance/#rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-60"&gt;&lt;/a&gt;    &lt;span class="n"&gt;loop&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a id="rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-61" name="rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-61" href="http://blog.povilasb.com/posts/python-asyncio-vs-nginx-performance/#rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-61"&gt;&lt;/a&gt;
&lt;a id="rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-62" name="rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-62" href="http://blog.povilasb.com/posts/python-asyncio-vs-nginx-performance/#rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-62"&gt;&lt;/a&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="vm"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;'__main__'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a id="rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-63" name="rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-63" href="http://blog.povilasb.com/posts/python-asyncio-vs-nginx-performance/#rest_code_b4b873f7c5d944adb93ffd4ddb4505a9-63"&gt;&lt;/a&gt;    &lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;All it does is simply serves a static 20k content over TLS.
I configure nginx to do the same.&lt;/p&gt;
&lt;p&gt;Then I ran a small benchmark with &lt;a class="reference external" href="http://github.com/povilasb/httpmeter"&gt;httpmeter&lt;/a&gt;. I am doing one request per connection
as I am mainly interested in TLS performance.
Here's the results for asyncio based server:&lt;/p&gt;
&lt;pre class="literal-block"&gt;$ httpmeter -c 1000 -n 3000 -H 'Connection: close' https://192.168.2.222:8082/
Concurrency Level:        1000
Completed Requests:       3000
Requests Per Second:      544.186120 [#/sec] (mean)
Request Durations:        [min: 0.147766, avg: 1.016474, max: 1.847824] seconds
Document Length:          [min: 20480, avg: 20480.000000, max: 20480] bytes
Status codes:
        200 3000&lt;/pre&gt;
&lt;p&gt;And here's for nginx:&lt;/p&gt;
&lt;pre class="literal-block"&gt;$ httpmeter -c 1000 -n 3000 -H 'Connection: close' https://192.168.2.222:8443/20k
Concurrency Level:        1000
Completed Requests:       3000
Requests Per Second:      1210.957884 [#/sec] (mean)
Request Durations:        [min: 0.068251, avg: 0.454704, max: 0.834079] seconds
Document Length:          [min: 20480, avg: 20480.000000, max: 20480] bytes
Status codes:
        200 3000&lt;/pre&gt;
&lt;p&gt;Both nginx and python server loaded up to 100% single CPU core.&lt;/p&gt;
&lt;p&gt;Basically nginx performed 2x better than asyncio.&lt;/p&gt;
&lt;p&gt;I profiled the asyncio server:&lt;/p&gt;
&lt;pre class="literal-block"&gt;$ pyenv/bin/python server.py
     361637 function calls (361625 primitive calls) in 9.351 seconds

Ordered by: internal time

ncalls  tottime  percall  cumtime  percall filename:lineno(function)
 9000    4.770    0.001    4.770    0.001 {method 'do_handshake' of '_ssl._SSLSocket' objects}
    1    4.088    4.088    9.349    9.349 {method 'run_forever' of 'uvloop.loop.Loop' objects}
15000    0.076    0.000    4.975    0.000 sslproto.py:169(feed_ssldata)
 3000    0.068    0.000    0.068    0.000 {method 'write' of '_ssl._SSLSocket' objects}
 9000    0.045    0.000    0.045    0.000 {method 'read' of '_ssl._SSLSocket' objects}
12000    0.033    0.000    0.221    0.000 sslproto.py:624(_process_write_backlog)
 3000    0.024    0.000    0.025    0.000 sslproto.py:413(__init__)
 9000    0.018    0.000    5.107    0.001 sslproto.py:497(data_received)
 3000    0.017    0.000    0.035    0.000 sslproto.py:572(_on_handshake_complete)
 3000    0.015    0.000    0.015    0.000 {method '_wrap_bio' of '_ssl._SSLContext' objects}
12000    0.013    0.000    0.013    0.000 {method 'read' of '_ssl.MemoryBIO' objects}
 3000    0.012    0.000    0.012    0.000 {method 'shutdown' of '_ssl._SSLSocket' objects}
 3000    0.012    0.000    0.091    0.000 sslproto.py:243(feed_appdata)
 9000    0.010    0.000    4.782    0.001 ssl.py:681(do_handshake)
 3000    0.009    0.000    0.019    0.000 sslproto.py:460(connection_made)
12000    0.008    0.000    0.008    0.000 {method 'write' of 'uvloop.loop.UVStream' objects}
 6000    0.007    0.000    0.155    0.000 sslproto.py:555(_write_appdata)
 9000    0.007    0.000    0.007    0.000 {method 'write' of '_ssl.MemoryBIO' objects}
 3000    0.006    0.000    0.061    0.000 sslproto.py:118(do_handshake)
 3000    0.006    0.000    0.168    0.000 server.py:25(request_received)
 3000    0.006    0.000    0.008    0.000 sslproto.py:521(eof_received)
48045    0.005    0.000    0.005    0.000 {built-in method builtins.len}
 3000    0.005    0.000    0.005    0.000 sslproto.py:68(__init__)
 3000    0.005    0.000    0.034    0.000 server.py:43(&amp;lt;lambda&amp;gt;)
 9000    0.005    0.000    0.050    0.000 ssl.py:618(read)
 9000    0.005    0.000    0.005    0.000 {method 'call_soon' of 'uvloop.loop.Loop' objects}
15018    0.005    0.000    0.005    0.000 {built-in method builtins.getattr}
 3000    0.004    0.000    0.009    0.000 weakref.py:155(__setitem__)
 3000    0.004    0.000    0.030    0.000 sslproto.py:139(shutdown)
 3000    0.004    0.000    0.021    0.000 ssl.py:403(wrap_bio)
 3000    0.004    0.000    0.006    0.000 sslproto.py:471(connection_lost)
 3000    0.003    0.000    0.114    0.000 sslproto.py:379(write)
 3000    0.003    0.000    0.003    0.000 server.py:21(__init__)
 3000    0.003    0.000    0.005    0.000 sslproto.py:560(_start_handshake)
 3000    0.003    0.000    0.003    0.000 {method 'cipher' of '_ssl._SSLSocket' objects}
 3000    0.003    0.000    0.003    0.000 {method 'update' of 'dict' objects}
15028    0.002    0.000    0.002    0.000 {method 'append' of 'list' objects}
 3000    0.002    0.000    0.004    0.000 ssl.py:638(getpeercert)
 3000    0.002    0.000    0.002    0.000 weakref.py:310(__init__)
 3000    0.002    0.000    0.002    0.000 ssl.py:577(__init__)
 3000    0.002    0.000    0.048    0.000 sslproto.py:317(close)
 3000    0.002    0.000    0.002    0.000 {method 'peer_certificate' of '_ssl._SSLSocket' objects}
 3000    0.002    0.000    0.014    0.000 ssl.py:690(unwrap)
 9000    0.002    0.000    0.002    0.000 sslproto.py:450(_wakeup_waiter)
 3000    0.002    0.000    0.046    0.000 sslproto.py:549(_start_shutdown)
 3000    0.001    0.000    0.003    0.000 weakref.py:305(__new__)
 3000    0.001    0.000    0.001    0.000 {method 'close' of 'uvloop.loop.UVBaseTransport' objects}
 3000    0.001    0.000    0.001    0.000 ssl.py:584(context)
 3000    0.001    0.000    0.170    0.000 server.py:29(data_received)
 1454    0.001    0.000    0.001    0.000 weakref.py:108(remove)
 3002    0.001    0.000    0.001    0.000 {built-in method __new__ of type object at 0x88d200}
 3000    0.001    0.000    0.069    0.000 ssl.py:630(write)
 3000    0.001    0.000    0.001    0.000 sslproto.py:297(__init__)
 9000    0.001    0.000    0.001    0.000 {method 'get_debug' of 'uvloop.loop.Loop' objects}
 3000    0.001    0.000    0.004    0.000 ssl.py:661(cipher)
 3000    0.001    0.000    0.002    0.000 ssl.py:672(compression)
 9000    0.001    0.000    0.001    0.000 {method 'append' of 'collections.deque' objects}
 3000    0.001    0.000    0.001    0.000 server.py:33(connection_made)
 3018    0.001    0.000    0.001    0.000 {built-in method builtins.hasattr}
 3022    0.001    0.000    0.001    0.000 {built-in method builtins.isinstance}
 3000    0.001    0.000    0.001    0.000 sslproto.py:95(ssl_object)
 3000    0.000    0.000    0.000    0.000 {method 'compression' of '_ssl._SSLSocket' objects}
 3000    0.000    0.000    0.000    0.000 protocols.py:94(eof_received)
    2    0.000    0.000    0.000    0.000 sre_compile.py:250(_optimize_charset)
 3000    0.000    0.000    0.000    0.000 protocols.py:25(connection_lost)
 2397    0.000    0.000    0.000    0.000 sslproto.py:332(__del__)&lt;/pre&gt;
&lt;p&gt;It turns out that most of the time is spent doing TLS handshake.
This is weird because I expected TLS to perform similar to nginx because
python is only wrapping OpenSSL C implementation.&lt;/p&gt;
&lt;p&gt;One of the possible improvements that nginx could have is TLS session
resumption.
But it's not possible in this case because I used &lt;cite&gt;httpmeter&lt;/cite&gt; which is
implemented in python.
And by the time I ran benchmarks, python TLS API did not support TLS sessions
(&lt;a class="reference external" href="https://bugs.python.org/issue19500"&gt;https://bugs.python.org/issue19500&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;So I need to do more research to better understand nginx over python asyncio
TLS performance.&lt;/p&gt;</description><category>asyncio</category><category>python</category><category>tls</category><guid>http://blog.povilasb.com/posts/python-asyncio-vs-nginx-performance/</guid><pubDate>Fri, 24 Feb 2017 15:23:38 GMT</pubDate></item><item><title>MNIST with scikit-learn</title><link>http://blog.povilasb.com/posts/mnist-with-scikit-learn/</link><dc:creator>Povilas Balciunas</dc:creator><description>&lt;p&gt;Solving &lt;a class="reference external" href="http://yann.lecun.com/exdb/mnist/"&gt;MNIST&lt;/a&gt; with &lt;a class="reference external" href="http://scikit-learn.org/"&gt;scikit-learn&lt;/a&gt; is easy.&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code python"&gt;&lt;a id="rest_code_e91578da48aa4a23b03ca33a4c2b430a-1" name="rest_code_e91578da48aa4a23b03ca33a4c2b430a-1" href="http://blog.povilasb.com/posts/mnist-with-scikit-learn/#rest_code_e91578da48aa4a23b03ca33a4c2b430a-1"&gt;&lt;/a&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;sklearn&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;datasets&lt;/span&gt;
&lt;a id="rest_code_e91578da48aa4a23b03ca33a4c2b430a-2" name="rest_code_e91578da48aa4a23b03ca33a4c2b430a-2" href="http://blog.povilasb.com/posts/mnist-with-scikit-learn/#rest_code_e91578da48aa4a23b03ca33a4c2b430a-2"&gt;&lt;/a&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;sklearn.neighbors&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;KNeighborsClassifier&lt;/span&gt;
&lt;a id="rest_code_e91578da48aa4a23b03ca33a4c2b430a-3" name="rest_code_e91578da48aa4a23b03ca33a4c2b430a-3" href="http://blog.povilasb.com/posts/mnist-with-scikit-learn/#rest_code_e91578da48aa4a23b03ca33a4c2b430a-3"&gt;&lt;/a&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;sklearn.model_selection&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;train_test_split&lt;/span&gt;
&lt;a id="rest_code_e91578da48aa4a23b03ca33a4c2b430a-4" name="rest_code_e91578da48aa4a23b03ca33a4c2b430a-4" href="http://blog.povilasb.com/posts/mnist-with-scikit-learn/#rest_code_e91578da48aa4a23b03ca33a4c2b430a-4"&gt;&lt;/a&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;sklearn.metrics&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;accuracy_score&lt;/span&gt;
&lt;a id="rest_code_e91578da48aa4a23b03ca33a4c2b430a-5" name="rest_code_e91578da48aa4a23b03ca33a4c2b430a-5" href="http://blog.povilasb.com/posts/mnist-with-scikit-learn/#rest_code_e91578da48aa4a23b03ca33a4c2b430a-5"&gt;&lt;/a&gt;
&lt;a id="rest_code_e91578da48aa4a23b03ca33a4c2b430a-6" name="rest_code_e91578da48aa4a23b03ca33a4c2b430a-6" href="http://blog.povilasb.com/posts/mnist-with-scikit-learn/#rest_code_e91578da48aa4a23b03ca33a4c2b430a-6"&gt;&lt;/a&gt;&lt;span class="n"&gt;mnist&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;datasets&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fetch_mldata&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'MNIST original'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;data_home&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'data'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_e91578da48aa4a23b03ca33a4c2b430a-7" name="rest_code_e91578da48aa4a23b03ca33a4c2b430a-7" href="http://blog.povilasb.com/posts/mnist-with-scikit-learn/#rest_code_e91578da48aa4a23b03ca33a4c2b430a-7"&gt;&lt;/a&gt;&lt;span class="n"&gt;train_data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;test_data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;train_labels&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;test_labels&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;train_test_split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
&lt;a id="rest_code_e91578da48aa4a23b03ca33a4c2b430a-8" name="rest_code_e91578da48aa4a23b03ca33a4c2b430a-8" href="http://blog.povilasb.com/posts/mnist-with-scikit-learn/#rest_code_e91578da48aa4a23b03ca33a4c2b430a-8"&gt;&lt;/a&gt;    &lt;span class="n"&gt;mnist&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;mnist&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;target&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_e91578da48aa4a23b03ca33a4c2b430a-9" name="rest_code_e91578da48aa4a23b03ca33a4c2b430a-9" href="http://blog.povilasb.com/posts/mnist-with-scikit-learn/#rest_code_e91578da48aa4a23b03ca33a4c2b430a-9"&gt;&lt;/a&gt;
&lt;a id="rest_code_e91578da48aa4a23b03ca33a4c2b430a-10" name="rest_code_e91578da48aa4a23b03ca33a4c2b430a-10" href="http://blog.povilasb.com/posts/mnist-with-scikit-learn/#rest_code_e91578da48aa4a23b03ca33a4c2b430a-10"&gt;&lt;/a&gt;&lt;span class="n"&gt;clf&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;KNeighborsClassifier&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a id="rest_code_e91578da48aa4a23b03ca33a4c2b430a-11" name="rest_code_e91578da48aa4a23b03ca33a4c2b430a-11" href="http://blog.povilasb.com/posts/mnist-with-scikit-learn/#rest_code_e91578da48aa4a23b03ca33a4c2b430a-11"&gt;&lt;/a&gt;&lt;span class="n"&gt;clf&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;train_data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;train_labels&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_e91578da48aa4a23b03ca33a4c2b430a-12" name="rest_code_e91578da48aa4a23b03ca33a4c2b430a-12" href="http://blog.povilasb.com/posts/mnist-with-scikit-learn/#rest_code_e91578da48aa4a23b03ca33a4c2b430a-12"&gt;&lt;/a&gt;
&lt;a id="rest_code_e91578da48aa4a23b03ca33a4c2b430a-13" name="rest_code_e91578da48aa4a23b03ca33a4c2b430a-13" href="http://blog.povilasb.com/posts/mnist-with-scikit-learn/#rest_code_e91578da48aa4a23b03ca33a4c2b430a-13"&gt;&lt;/a&gt;&lt;span class="n"&gt;predicted_labels&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;clf&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;predict&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;test_data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_e91578da48aa4a23b03ca33a4c2b430a-14" name="rest_code_e91578da48aa4a23b03ca33a4c2b430a-14" href="http://blog.povilasb.com/posts/mnist-with-scikit-learn/#rest_code_e91578da48aa4a23b03ca33a4c2b430a-14"&gt;&lt;/a&gt;&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'Prediction accuracy:'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;accuracy_score&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;test_labels&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;predicted_labels&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I get 97% accuracy which is great for such a simple implementation.&lt;/p&gt;
&lt;p&gt;With &lt;cite&gt;train_test_split()&lt;/cite&gt; I split the data into training and testing segments.
For simplicity I used K-nearest neighbour classifier but potentially others
could be used too (&lt;a class="reference external" href="http://brianfarris.me/static/digit_recognizer.html"&gt;http://brianfarris.me/static/digit_recognizer.html&lt;/a&gt;).&lt;/p&gt;
&lt;section id="reusability"&gt;
&lt;h2&gt;Reusability&lt;/h2&gt;
&lt;p&gt;&lt;cite&gt;clf.fit()&lt;/cite&gt; takes some time to train the classifier.
But we can store the trained classifier on disk and reuse it multiple times:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code python"&gt;&lt;a id="rest_code_34497f195d3f480aa2bafd0b138735b6-1" name="rest_code_34497f195d3f480aa2bafd0b138735b6-1" href="http://blog.povilasb.com/posts/mnist-with-scikit-learn/#rest_code_34497f195d3f480aa2bafd0b138735b6-1"&gt;&lt;/a&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;sklearn.externals&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;joblib&lt;/span&gt;
&lt;a id="rest_code_34497f195d3f480aa2bafd0b138735b6-2" name="rest_code_34497f195d3f480aa2bafd0b138735b6-2" href="http://blog.povilasb.com/posts/mnist-with-scikit-learn/#rest_code_34497f195d3f480aa2bafd0b138735b6-2"&gt;&lt;/a&gt;
&lt;a id="rest_code_34497f195d3f480aa2bafd0b138735b6-3" name="rest_code_34497f195d3f480aa2bafd0b138735b6-3" href="http://blog.povilasb.com/posts/mnist-with-scikit-learn/#rest_code_34497f195d3f480aa2bafd0b138735b6-3"&gt;&lt;/a&gt;&lt;span class="n"&gt;clf&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;KNeighborsClassifier&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a id="rest_code_34497f195d3f480aa2bafd0b138735b6-4" name="rest_code_34497f195d3f480aa2bafd0b138735b6-4" href="http://blog.povilasb.com/posts/mnist-with-scikit-learn/#rest_code_34497f195d3f480aa2bafd0b138735b6-4"&gt;&lt;/a&gt;&lt;span class="n"&gt;clf&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;train_data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;train_labels&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_34497f195d3f480aa2bafd0b138735b6-5" name="rest_code_34497f195d3f480aa2bafd0b138735b6-5" href="http://blog.povilasb.com/posts/mnist-with-scikit-learn/#rest_code_34497f195d3f480aa2bafd0b138735b6-5"&gt;&lt;/a&gt;&lt;span class="n"&gt;joblib&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dump&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;clf&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'classifier_model.pkl'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_34497f195d3f480aa2bafd0b138735b6-6" name="rest_code_34497f195d3f480aa2bafd0b138735b6-6" href="http://blog.povilasb.com/posts/mnist-with-scikit-learn/#rest_code_34497f195d3f480aa2bafd0b138735b6-6"&gt;&lt;/a&gt;
&lt;a id="rest_code_34497f195d3f480aa2bafd0b138735b6-7" name="rest_code_34497f195d3f480aa2bafd0b138735b6-7" href="http://blog.povilasb.com/posts/mnist-with-scikit-learn/#rest_code_34497f195d3f480aa2bafd0b138735b6-7"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# ...&lt;/span&gt;
&lt;a id="rest_code_34497f195d3f480aa2bafd0b138735b6-8" name="rest_code_34497f195d3f480aa2bafd0b138735b6-8" href="http://blog.povilasb.com/posts/mnist-with-scikit-learn/#rest_code_34497f195d3f480aa2bafd0b138735b6-8"&gt;&lt;/a&gt;
&lt;a id="rest_code_34497f195d3f480aa2bafd0b138735b6-9" name="rest_code_34497f195d3f480aa2bafd0b138735b6-9" href="http://blog.povilasb.com/posts/mnist-with-scikit-learn/#rest_code_34497f195d3f480aa2bafd0b138735b6-9"&gt;&lt;/a&gt;&lt;span class="n"&gt;clf&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;joblib&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;load&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'classifier_model.pkl'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_34497f195d3f480aa2bafd0b138735b6-10" name="rest_code_34497f195d3f480aa2bafd0b138735b6-10" href="http://blog.povilasb.com/posts/mnist-with-scikit-learn/#rest_code_34497f195d3f480aa2bafd0b138735b6-10"&gt;&lt;/a&gt;&lt;span class="n"&gt;predicted_labels&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;clf&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;predict&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;test_data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The serialized classifier takes up to 520 MB on disk.&lt;/p&gt;
&lt;/section&gt;</description><category>machine learning</category><category>mnist</category><category>python</category><category>scikit-learn</category><guid>http://blog.povilasb.com/posts/mnist-with-scikit-learn/</guid><pubDate>Mon, 20 Feb 2017 19:19:15 GMT</pubDate></item><item><title>Python SSL MemoryBIO usage</title><link>http://blog.povilasb.com/posts/python-ssl-memorybio-usage/</link><dc:creator>Povilas Balciunas</dc:creator><description>&lt;p&gt;OpenSSL has a basic I/O abstraction which is abbreviated as BIO.&lt;/p&gt;
&lt;p&gt;This abstraction let's you encode raw stream to TLS and back in memory -
without actually doing any network I/O.&lt;/p&gt;
&lt;p&gt;Python 3.5 introduced an API to use this feature:
&lt;a class="reference external" href="https://docs.python.org/3/library/ssl.html#memory-bio-support"&gt;https://docs.python.org/3/library/ssl.html#memory-bio-support&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I haven't found any samples/tutorials how to use these objects, so I'm
going to describe it briefly.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://docs.python.org/3/library/ssl.html#ssl.SSLObject"&gt;SSLObject&lt;/a&gt; and
&lt;a class="reference external" href="https://docs.python.org/3/library/ssl.html#ssl.MemoryBIO"&gt;MemoryBIO&lt;/a&gt; are
the core objects to do TLS.
&lt;cite&gt;SSLObject&lt;/cite&gt; does the data encryption/decryption and &lt;cite&gt;MemoryBIO&lt;/cite&gt; objects
are used to feed data to &lt;cite&gt;SSLObject&lt;/cite&gt; and receive it back.&lt;/p&gt;
&lt;p&gt;The only way to create &lt;cite&gt;SSLObject&lt;/cite&gt; is to use
&lt;a class="reference external" href="https://docs.python.org/3/library/ssl.html#ssl.SSLContext.wrap_bio"&gt;SSLContext.wrap_bio()&lt;/a&gt;.&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code python"&gt;&lt;a id="rest_code_9dfea63c8e0a48aca954f7bbe62ad436-1" name="rest_code_9dfea63c8e0a48aca954f7bbe62ad436-1" href="http://blog.povilasb.com/posts/python-ssl-memorybio-usage/#rest_code_9dfea63c8e0a48aca954f7bbe62ad436-1"&gt;&lt;/a&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;ssl&lt;/span&gt;
&lt;a id="rest_code_9dfea63c8e0a48aca954f7bbe62ad436-2" name="rest_code_9dfea63c8e0a48aca954f7bbe62ad436-2" href="http://blog.povilasb.com/posts/python-ssl-memorybio-usage/#rest_code_9dfea63c8e0a48aca954f7bbe62ad436-2"&gt;&lt;/a&gt;
&lt;a id="rest_code_9dfea63c8e0a48aca954f7bbe62ad436-3" name="rest_code_9dfea63c8e0a48aca954f7bbe62ad436-3" href="http://blog.povilasb.com/posts/python-ssl-memorybio-usage/#rest_code_9dfea63c8e0a48aca954f7bbe62ad436-3"&gt;&lt;/a&gt;&lt;span class="n"&gt;tls_in_buff&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ssl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;MemoryBIO&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a id="rest_code_9dfea63c8e0a48aca954f7bbe62ad436-4" name="rest_code_9dfea63c8e0a48aca954f7bbe62ad436-4" href="http://blog.povilasb.com/posts/python-ssl-memorybio-usage/#rest_code_9dfea63c8e0a48aca954f7bbe62ad436-4"&gt;&lt;/a&gt;&lt;span class="n"&gt;tls_out_buff&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ssl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;MemoryBIO&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a id="rest_code_9dfea63c8e0a48aca954f7bbe62ad436-5" name="rest_code_9dfea63c8e0a48aca954f7bbe62ad436-5" href="http://blog.povilasb.com/posts/python-ssl-memorybio-usage/#rest_code_9dfea63c8e0a48aca954f7bbe62ad436-5"&gt;&lt;/a&gt;
&lt;a id="rest_code_9dfea63c8e0a48aca954f7bbe62ad436-6" name="rest_code_9dfea63c8e0a48aca954f7bbe62ad436-6" href="http://blog.povilasb.com/posts/python-ssl-memorybio-usage/#rest_code_9dfea63c8e0a48aca954f7bbe62ad436-6"&gt;&lt;/a&gt;&lt;span class="n"&gt;ctx&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ssl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SSLContext&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ssl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;PROTOCOL_SSLv23&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_9dfea63c8e0a48aca954f7bbe62ad436-7" name="rest_code_9dfea63c8e0a48aca954f7bbe62ad436-7" href="http://blog.povilasb.com/posts/python-ssl-memorybio-usage/#rest_code_9dfea63c8e0a48aca954f7bbe62ad436-7"&gt;&lt;/a&gt;&lt;span class="n"&gt;ctx&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;load_cert_chain&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'localhost.crt'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'private_key.pem'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_9dfea63c8e0a48aca954f7bbe62ad436-8" name="rest_code_9dfea63c8e0a48aca954f7bbe62ad436-8" href="http://blog.povilasb.com/posts/python-ssl-memorybio-usage/#rest_code_9dfea63c8e0a48aca954f7bbe62ad436-8"&gt;&lt;/a&gt;&lt;span class="n"&gt;tls_obj&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ctx&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;wrap_bio&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tls_in_buff&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;tls_out_buff&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;server_side&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To decrypt data we write it into input &lt;cite&gt;MemoryBIO&lt;/cite&gt; object and then read
the raw data from &lt;cite&gt;SSLObject&lt;/cite&gt;:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code python"&gt;&lt;a id="rest_code_39fd1679073a43a9bec35a69605b7445-1" name="rest_code_39fd1679073a43a9bec35a69605b7445-1" href="http://blog.povilasb.com/posts/python-ssl-memorybio-usage/#rest_code_39fd1679073a43a9bec35a69605b7445-1"&gt;&lt;/a&gt;&lt;span class="n"&gt;tls_in_buff&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sock&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;recv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;4096&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;a id="rest_code_39fd1679073a43a9bec35a69605b7445-2" name="rest_code_39fd1679073a43a9bec35a69605b7445-2" href="http://blog.povilasb.com/posts/python-ssl-memorybio-usage/#rest_code_39fd1679073a43a9bec35a69605b7445-2"&gt;&lt;/a&gt;&lt;span class="n"&gt;http_req&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;tls_obj&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a id="rest_code_39fd1679073a43a9bec35a69605b7445-3" name="rest_code_39fd1679073a43a9bec35a69605b7445-3" href="http://blog.povilasb.com/posts/python-ssl-memorybio-usage/#rest_code_39fd1679073a43a9bec35a69605b7445-3"&gt;&lt;/a&gt;&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;http_req&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To encrypt data we write into &lt;cite&gt;SSLObject&lt;/cite&gt; and then read the encrypted data
from output &lt;cite&gt;MemoryBIO&lt;/cite&gt;:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code python"&gt;&lt;a id="rest_code_846e1cee8cf8471f88dbac47342f2bac-1" name="rest_code_846e1cee8cf8471f88dbac47342f2bac-1" href="http://blog.povilasb.com/posts/python-ssl-memorybio-usage/#rest_code_846e1cee8cf8471f88dbac47342f2bac-1"&gt;&lt;/a&gt;&lt;span class="n"&gt;tls_obj&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;b&lt;/span&gt;&lt;span class="s1"&gt;'HTTP/1.1 200 OK&lt;/span&gt;&lt;span class="se"&gt;\r\n\r\n&lt;/span&gt;&lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_846e1cee8cf8471f88dbac47342f2bac-2" name="rest_code_846e1cee8cf8471f88dbac47342f2bac-2" href="http://blog.povilasb.com/posts/python-ssl-memorybio-usage/#rest_code_846e1cee8cf8471f88dbac47342f2bac-2"&gt;&lt;/a&gt;&lt;span class="n"&gt;sock&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sendall&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tls_out_buff&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Basically encryption/decryption could be depicted as:&lt;/p&gt;
&lt;pre class="literal-block"&gt;     b'data'    b'\x17\x03\x03\x00\x1c\xc1...'
        |                  |
write() |                  | write()
        |                  v
        |             +-----------+
        |             |   input   |
        |             | MemoryBIO |
        |             +-----------+
        |                  |
        v                  v
     +-----------------------------+
     |                             |
     |          SSLObject          |
     |                             |
     +-----------------------------+
        |                 |
        |                 | read()
        v                 v
  +-----------+         b'data'
  |   output  |
  | MemoryBIO |
  +-----------+
       |
read() |
       V

b'\x17\x03\x03\x00\x1c\xc1...'&lt;/pre&gt;
&lt;section id="sample-https-server"&gt;
&lt;h2&gt;Sample HTTPS Server&lt;/h2&gt;
&lt;div class="code"&gt;&lt;table class="codetable"&gt;&lt;tr&gt;&lt;td class="linenos linenodiv"&gt;&lt;a href="http://blog.povilasb.com/posts/python-ssl-memorybio-usage/#rest_code_095f5aea8f354d988a71f02eb47a8651-1"&gt;&lt;code data-line-number=" 1"&gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;code&gt;&lt;a id="rest_code_095f5aea8f354d988a71f02eb47a8651-1" name="rest_code_095f5aea8f354d988a71f02eb47a8651-1"&gt;&lt;/a&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;socket&lt;/span&gt;
&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class="linenos linenodiv"&gt;&lt;a href="http://blog.povilasb.com/posts/python-ssl-memorybio-usage/#rest_code_095f5aea8f354d988a71f02eb47a8651-2"&gt;&lt;code data-line-number=" 2"&gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;code&gt;&lt;a id="rest_code_095f5aea8f354d988a71f02eb47a8651-2" name="rest_code_095f5aea8f354d988a71f02eb47a8651-2"&gt;&lt;/a&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;ssl&lt;/span&gt;
&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class="linenos linenodiv"&gt;&lt;a href="http://blog.povilasb.com/posts/python-ssl-memorybio-usage/#rest_code_095f5aea8f354d988a71f02eb47a8651-3"&gt;&lt;code data-line-number=" 3"&gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;code&gt;&lt;a id="rest_code_095f5aea8f354d988a71f02eb47a8651-3" name="rest_code_095f5aea8f354d988a71f02eb47a8651-3"&gt;&lt;/a&gt;
&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class="linenos linenodiv"&gt;&lt;a href="http://blog.povilasb.com/posts/python-ssl-memorybio-usage/#rest_code_095f5aea8f354d988a71f02eb47a8651-4"&gt;&lt;code data-line-number=" 4"&gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;code&gt;&lt;a id="rest_code_095f5aea8f354d988a71f02eb47a8651-4" name="rest_code_095f5aea8f354d988a71f02eb47a8651-4"&gt;&lt;/a&gt;
&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class="linenos linenodiv"&gt;&lt;a href="http://blog.povilasb.com/posts/python-ssl-memorybio-usage/#rest_code_095f5aea8f354d988a71f02eb47a8651-5"&gt;&lt;code data-line-number=" 5"&gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;code&gt;&lt;a id="rest_code_095f5aea8f354d988a71f02eb47a8651-5" name="rest_code_095f5aea8f354d988a71f02eb47a8651-5"&gt;&lt;/a&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;do_tls_handshake&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sock&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;socket&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;socket&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;tls_obj&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;tls_in_buff&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;ssl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;MemoryBIO&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class="linenos linenodiv"&gt;&lt;a href="http://blog.povilasb.com/posts/python-ssl-memorybio-usage/#rest_code_095f5aea8f354d988a71f02eb47a8651-6"&gt;&lt;code data-line-number=" 6"&gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;code&gt;&lt;a id="rest_code_095f5aea8f354d988a71f02eb47a8651-6" name="rest_code_095f5aea8f354d988a71f02eb47a8651-6"&gt;&lt;/a&gt;                     &lt;span class="n"&gt;tls_out_buff&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;ssl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;MemoryBIO&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="kc"&gt;None&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class="linenos linenodiv"&gt;&lt;a href="http://blog.povilasb.com/posts/python-ssl-memorybio-usage/#rest_code_095f5aea8f354d988a71f02eb47a8651-7"&gt;&lt;code data-line-number=" 7"&gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;code&gt;&lt;a id="rest_code_095f5aea8f354d988a71f02eb47a8651-7" name="rest_code_095f5aea8f354d988a71f02eb47a8651-7"&gt;&lt;/a&gt;    &lt;span class="n"&gt;client_hello&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sock&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;recv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;4096&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class="linenos linenodiv"&gt;&lt;a href="http://blog.povilasb.com/posts/python-ssl-memorybio-usage/#rest_code_095f5aea8f354d988a71f02eb47a8651-8"&gt;&lt;code data-line-number=" 8"&gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;code&gt;&lt;a id="rest_code_095f5aea8f354d988a71f02eb47a8651-8" name="rest_code_095f5aea8f354d988a71f02eb47a8651-8"&gt;&lt;/a&gt;    &lt;span class="n"&gt;tls_in_buff&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;client_hello&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class="linenos linenodiv"&gt;&lt;a href="http://blog.povilasb.com/posts/python-ssl-memorybio-usage/#rest_code_095f5aea8f354d988a71f02eb47a8651-9"&gt;&lt;code data-line-number=" 9"&gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;code&gt;&lt;a id="rest_code_095f5aea8f354d988a71f02eb47a8651-9" name="rest_code_095f5aea8f354d988a71f02eb47a8651-9"&gt;&lt;/a&gt;
&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class="linenos linenodiv"&gt;&lt;a href="http://blog.povilasb.com/posts/python-ssl-memorybio-usage/#rest_code_095f5aea8f354d988a71f02eb47a8651-10"&gt;&lt;code data-line-number="10"&gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;code&gt;&lt;a id="rest_code_095f5aea8f354d988a71f02eb47a8651-10" name="rest_code_095f5aea8f354d988a71f02eb47a8651-10"&gt;&lt;/a&gt;    &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class="linenos linenodiv"&gt;&lt;a href="http://blog.povilasb.com/posts/python-ssl-memorybio-usage/#rest_code_095f5aea8f354d988a71f02eb47a8651-11"&gt;&lt;code data-line-number="11"&gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;code&gt;&lt;a id="rest_code_095f5aea8f354d988a71f02eb47a8651-11" name="rest_code_095f5aea8f354d988a71f02eb47a8651-11"&gt;&lt;/a&gt;        &lt;span class="n"&gt;tls_obj&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;do_handshake&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class="linenos linenodiv"&gt;&lt;a href="http://blog.povilasb.com/posts/python-ssl-memorybio-usage/#rest_code_095f5aea8f354d988a71f02eb47a8651-12"&gt;&lt;code data-line-number="12"&gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;code&gt;&lt;a id="rest_code_095f5aea8f354d988a71f02eb47a8651-12" name="rest_code_095f5aea8f354d988a71f02eb47a8651-12"&gt;&lt;/a&gt;    &lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="n"&gt;ssl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SSLWantReadError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class="linenos linenodiv"&gt;&lt;a href="http://blog.povilasb.com/posts/python-ssl-memorybio-usage/#rest_code_095f5aea8f354d988a71f02eb47a8651-13"&gt;&lt;code data-line-number="13"&gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;code&gt;&lt;a id="rest_code_095f5aea8f354d988a71f02eb47a8651-13" name="rest_code_095f5aea8f354d988a71f02eb47a8651-13"&gt;&lt;/a&gt;        &lt;span class="n"&gt;server_hello&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;tls_out_buff&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class="linenos linenodiv"&gt;&lt;a href="http://blog.povilasb.com/posts/python-ssl-memorybio-usage/#rest_code_095f5aea8f354d988a71f02eb47a8651-14"&gt;&lt;code data-line-number="14"&gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;code&gt;&lt;a id="rest_code_095f5aea8f354d988a71f02eb47a8651-14" name="rest_code_095f5aea8f354d988a71f02eb47a8651-14"&gt;&lt;/a&gt;        &lt;span class="n"&gt;sock&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sendall&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;server_hello&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class="linenos linenodiv"&gt;&lt;a href="http://blog.povilasb.com/posts/python-ssl-memorybio-usage/#rest_code_095f5aea8f354d988a71f02eb47a8651-15"&gt;&lt;code data-line-number="15"&gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;code&gt;&lt;a id="rest_code_095f5aea8f354d988a71f02eb47a8651-15" name="rest_code_095f5aea8f354d988a71f02eb47a8651-15"&gt;&lt;/a&gt;
&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class="linenos linenodiv"&gt;&lt;a href="http://blog.povilasb.com/posts/python-ssl-memorybio-usage/#rest_code_095f5aea8f354d988a71f02eb47a8651-16"&gt;&lt;code data-line-number="16"&gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;code&gt;&lt;a id="rest_code_095f5aea8f354d988a71f02eb47a8651-16" name="rest_code_095f5aea8f354d988a71f02eb47a8651-16"&gt;&lt;/a&gt;    &lt;span class="n"&gt;client_fin&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sock&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;recv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;4096&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class="linenos linenodiv"&gt;&lt;a href="http://blog.povilasb.com/posts/python-ssl-memorybio-usage/#rest_code_095f5aea8f354d988a71f02eb47a8651-17"&gt;&lt;code data-line-number="17"&gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;code&gt;&lt;a id="rest_code_095f5aea8f354d988a71f02eb47a8651-17" name="rest_code_095f5aea8f354d988a71f02eb47a8651-17"&gt;&lt;/a&gt;    &lt;span class="n"&gt;tls_in_buff&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;client_fin&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class="linenos linenodiv"&gt;&lt;a href="http://blog.povilasb.com/posts/python-ssl-memorybio-usage/#rest_code_095f5aea8f354d988a71f02eb47a8651-18"&gt;&lt;code data-line-number="18"&gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;code&gt;&lt;a id="rest_code_095f5aea8f354d988a71f02eb47a8651-18" name="rest_code_095f5aea8f354d988a71f02eb47a8651-18"&gt;&lt;/a&gt;    &lt;span class="n"&gt;tls_obj&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;do_handshake&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class="linenos linenodiv"&gt;&lt;a href="http://blog.povilasb.com/posts/python-ssl-memorybio-usage/#rest_code_095f5aea8f354d988a71f02eb47a8651-19"&gt;&lt;code data-line-number="19"&gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;code&gt;&lt;a id="rest_code_095f5aea8f354d988a71f02eb47a8651-19" name="rest_code_095f5aea8f354d988a71f02eb47a8651-19"&gt;&lt;/a&gt;
&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class="linenos linenodiv"&gt;&lt;a href="http://blog.povilasb.com/posts/python-ssl-memorybio-usage/#rest_code_095f5aea8f354d988a71f02eb47a8651-20"&gt;&lt;code data-line-number="20"&gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;code&gt;&lt;a id="rest_code_095f5aea8f354d988a71f02eb47a8651-20" name="rest_code_095f5aea8f354d988a71f02eb47a8651-20"&gt;&lt;/a&gt;    &lt;span class="n"&gt;server_fin&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;tls_out_buff&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class="linenos linenodiv"&gt;&lt;a href="http://blog.povilasb.com/posts/python-ssl-memorybio-usage/#rest_code_095f5aea8f354d988a71f02eb47a8651-21"&gt;&lt;code data-line-number="21"&gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;code&gt;&lt;a id="rest_code_095f5aea8f354d988a71f02eb47a8651-21" name="rest_code_095f5aea8f354d988a71f02eb47a8651-21"&gt;&lt;/a&gt;    &lt;span class="n"&gt;sock&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sendall&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;server_fin&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class="linenos linenodiv"&gt;&lt;a href="http://blog.povilasb.com/posts/python-ssl-memorybio-usage/#rest_code_095f5aea8f354d988a71f02eb47a8651-22"&gt;&lt;code data-line-number="22"&gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;code&gt;&lt;a id="rest_code_095f5aea8f354d988a71f02eb47a8651-22" name="rest_code_095f5aea8f354d988a71f02eb47a8651-22"&gt;&lt;/a&gt;
&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class="linenos linenodiv"&gt;&lt;a href="http://blog.povilasb.com/posts/python-ssl-memorybio-usage/#rest_code_095f5aea8f354d988a71f02eb47a8651-23"&gt;&lt;code data-line-number="23"&gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;code&gt;&lt;a id="rest_code_095f5aea8f354d988a71f02eb47a8651-23" name="rest_code_095f5aea8f354d988a71f02eb47a8651-23"&gt;&lt;/a&gt;
&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class="linenos linenodiv"&gt;&lt;a href="http://blog.povilasb.com/posts/python-ssl-memorybio-usage/#rest_code_095f5aea8f354d988a71f02eb47a8651-24"&gt;&lt;code data-line-number="24"&gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;code&gt;&lt;a id="rest_code_095f5aea8f354d988a71f02eb47a8651-24" name="rest_code_095f5aea8f354d988a71f02eb47a8651-24"&gt;&lt;/a&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;make_tls_objects&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class="linenos linenodiv"&gt;&lt;a href="http://blog.povilasb.com/posts/python-ssl-memorybio-usage/#rest_code_095f5aea8f354d988a71f02eb47a8651-25"&gt;&lt;code data-line-number="25"&gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;code&gt;&lt;a id="rest_code_095f5aea8f354d988a71f02eb47a8651-25" name="rest_code_095f5aea8f354d988a71f02eb47a8651-25"&gt;&lt;/a&gt;    &lt;span class="n"&gt;tls_in_buff&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ssl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;MemoryBIO&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class="linenos linenodiv"&gt;&lt;a href="http://blog.povilasb.com/posts/python-ssl-memorybio-usage/#rest_code_095f5aea8f354d988a71f02eb47a8651-26"&gt;&lt;code data-line-number="26"&gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;code&gt;&lt;a id="rest_code_095f5aea8f354d988a71f02eb47a8651-26" name="rest_code_095f5aea8f354d988a71f02eb47a8651-26"&gt;&lt;/a&gt;    &lt;span class="n"&gt;tls_out_buff&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ssl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;MemoryBIO&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class="linenos linenodiv"&gt;&lt;a href="http://blog.povilasb.com/posts/python-ssl-memorybio-usage/#rest_code_095f5aea8f354d988a71f02eb47a8651-27"&gt;&lt;code data-line-number="27"&gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;code&gt;&lt;a id="rest_code_095f5aea8f354d988a71f02eb47a8651-27" name="rest_code_095f5aea8f354d988a71f02eb47a8651-27"&gt;&lt;/a&gt;
&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class="linenos linenodiv"&gt;&lt;a href="http://blog.povilasb.com/posts/python-ssl-memorybio-usage/#rest_code_095f5aea8f354d988a71f02eb47a8651-28"&gt;&lt;code data-line-number="28"&gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;code&gt;&lt;a id="rest_code_095f5aea8f354d988a71f02eb47a8651-28" name="rest_code_095f5aea8f354d988a71f02eb47a8651-28"&gt;&lt;/a&gt;    &lt;span class="n"&gt;ctx&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ssl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SSLContext&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ssl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;PROTOCOL_SSLv23&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class="linenos linenodiv"&gt;&lt;a href="http://blog.povilasb.com/posts/python-ssl-memorybio-usage/#rest_code_095f5aea8f354d988a71f02eb47a8651-29"&gt;&lt;code data-line-number="29"&gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;code&gt;&lt;a id="rest_code_095f5aea8f354d988a71f02eb47a8651-29" name="rest_code_095f5aea8f354d988a71f02eb47a8651-29"&gt;&lt;/a&gt;    &lt;span class="n"&gt;ctx&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;load_cert_chain&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'localhost.crt'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'private_key.pem'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class="linenos linenodiv"&gt;&lt;a href="http://blog.povilasb.com/posts/python-ssl-memorybio-usage/#rest_code_095f5aea8f354d988a71f02eb47a8651-30"&gt;&lt;code data-line-number="30"&gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;code&gt;&lt;a id="rest_code_095f5aea8f354d988a71f02eb47a8651-30" name="rest_code_095f5aea8f354d988a71f02eb47a8651-30"&gt;&lt;/a&gt;    &lt;span class="n"&gt;tls_obj&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ctx&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;wrap_bio&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tls_in_buff&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;tls_out_buff&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;server_side&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class="linenos linenodiv"&gt;&lt;a href="http://blog.povilasb.com/posts/python-ssl-memorybio-usage/#rest_code_095f5aea8f354d988a71f02eb47a8651-31"&gt;&lt;code data-line-number="31"&gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;code&gt;&lt;a id="rest_code_095f5aea8f354d988a71f02eb47a8651-31" name="rest_code_095f5aea8f354d988a71f02eb47a8651-31"&gt;&lt;/a&gt;
&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class="linenos linenodiv"&gt;&lt;a href="http://blog.povilasb.com/posts/python-ssl-memorybio-usage/#rest_code_095f5aea8f354d988a71f02eb47a8651-32"&gt;&lt;code data-line-number="32"&gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;code&gt;&lt;a id="rest_code_095f5aea8f354d988a71f02eb47a8651-32" name="rest_code_095f5aea8f354d988a71f02eb47a8651-32"&gt;&lt;/a&gt;    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;tls_obj&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;tls_in_buff&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;tls_out_buff&lt;/span&gt;
&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class="linenos linenodiv"&gt;&lt;a href="http://blog.povilasb.com/posts/python-ssl-memorybio-usage/#rest_code_095f5aea8f354d988a71f02eb47a8651-33"&gt;&lt;code data-line-number="33"&gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;code&gt;&lt;a id="rest_code_095f5aea8f354d988a71f02eb47a8651-33" name="rest_code_095f5aea8f354d988a71f02eb47a8651-33"&gt;&lt;/a&gt;
&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class="linenos linenodiv"&gt;&lt;a href="http://blog.povilasb.com/posts/python-ssl-memorybio-usage/#rest_code_095f5aea8f354d988a71f02eb47a8651-34"&gt;&lt;code data-line-number="34"&gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;code&gt;&lt;a id="rest_code_095f5aea8f354d988a71f02eb47a8651-34" name="rest_code_095f5aea8f354d988a71f02eb47a8651-34"&gt;&lt;/a&gt;
&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class="linenos linenodiv"&gt;&lt;a href="http://blog.povilasb.com/posts/python-ssl-memorybio-usage/#rest_code_095f5aea8f354d988a71f02eb47a8651-35"&gt;&lt;code data-line-number="35"&gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;code&gt;&lt;a id="rest_code_095f5aea8f354d988a71f02eb47a8651-35" name="rest_code_095f5aea8f354d988a71f02eb47a8651-35"&gt;&lt;/a&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;respond_to_http_request&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sock&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;socket&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;socket&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="kc"&gt;None&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class="linenos linenodiv"&gt;&lt;a href="http://blog.povilasb.com/posts/python-ssl-memorybio-usage/#rest_code_095f5aea8f354d988a71f02eb47a8651-36"&gt;&lt;code data-line-number="36"&gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;code&gt;&lt;a id="rest_code_095f5aea8f354d988a71f02eb47a8651-36" name="rest_code_095f5aea8f354d988a71f02eb47a8651-36"&gt;&lt;/a&gt;    &lt;span class="n"&gt;tls_obj&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;tls_in_buff&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;tls_out_buff&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;make_tls_objects&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class="linenos linenodiv"&gt;&lt;a href="http://blog.povilasb.com/posts/python-ssl-memorybio-usage/#rest_code_095f5aea8f354d988a71f02eb47a8651-37"&gt;&lt;code data-line-number="37"&gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;code&gt;&lt;a id="rest_code_095f5aea8f354d988a71f02eb47a8651-37" name="rest_code_095f5aea8f354d988a71f02eb47a8651-37"&gt;&lt;/a&gt;    &lt;span class="n"&gt;do_tls_handshake&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sock&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;tls_obj&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;tls_in_buff&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;tls_out_buff&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class="linenos linenodiv"&gt;&lt;a href="http://blog.povilasb.com/posts/python-ssl-memorybio-usage/#rest_code_095f5aea8f354d988a71f02eb47a8651-38"&gt;&lt;code data-line-number="38"&gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;code&gt;&lt;a id="rest_code_095f5aea8f354d988a71f02eb47a8651-38" name="rest_code_095f5aea8f354d988a71f02eb47a8651-38"&gt;&lt;/a&gt;
&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class="linenos linenodiv"&gt;&lt;a href="http://blog.povilasb.com/posts/python-ssl-memorybio-usage/#rest_code_095f5aea8f354d988a71f02eb47a8651-39"&gt;&lt;code data-line-number="39"&gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;code&gt;&lt;a id="rest_code_095f5aea8f354d988a71f02eb47a8651-39" name="rest_code_095f5aea8f354d988a71f02eb47a8651-39"&gt;&lt;/a&gt;    &lt;span class="n"&gt;tls_in_buff&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sock&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;recv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;4096&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class="linenos linenodiv"&gt;&lt;a href="http://blog.povilasb.com/posts/python-ssl-memorybio-usage/#rest_code_095f5aea8f354d988a71f02eb47a8651-40"&gt;&lt;code data-line-number="40"&gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;code&gt;&lt;a id="rest_code_095f5aea8f354d988a71f02eb47a8651-40" name="rest_code_095f5aea8f354d988a71f02eb47a8651-40"&gt;&lt;/a&gt;    &lt;span class="n"&gt;http_req&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;tls_obj&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class="linenos linenodiv"&gt;&lt;a href="http://blog.povilasb.com/posts/python-ssl-memorybio-usage/#rest_code_095f5aea8f354d988a71f02eb47a8651-41"&gt;&lt;code data-line-number="41"&gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;code&gt;&lt;a id="rest_code_095f5aea8f354d988a71f02eb47a8651-41" name="rest_code_095f5aea8f354d988a71f02eb47a8651-41"&gt;&lt;/a&gt;    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;http_req&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class="linenos linenodiv"&gt;&lt;a href="http://blog.povilasb.com/posts/python-ssl-memorybio-usage/#rest_code_095f5aea8f354d988a71f02eb47a8651-42"&gt;&lt;code data-line-number="42"&gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;code&gt;&lt;a id="rest_code_095f5aea8f354d988a71f02eb47a8651-42" name="rest_code_095f5aea8f354d988a71f02eb47a8651-42"&gt;&lt;/a&gt;
&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class="linenos linenodiv"&gt;&lt;a href="http://blog.povilasb.com/posts/python-ssl-memorybio-usage/#rest_code_095f5aea8f354d988a71f02eb47a8651-43"&gt;&lt;code data-line-number="43"&gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;code&gt;&lt;a id="rest_code_095f5aea8f354d988a71f02eb47a8651-43" name="rest_code_095f5aea8f354d988a71f02eb47a8651-43"&gt;&lt;/a&gt;    &lt;span class="n"&gt;tls_obj&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;b&lt;/span&gt;&lt;span class="s1"&gt;'HTTP/1.1 200 OK&lt;/span&gt;&lt;span class="se"&gt;\r\n\r\n&lt;/span&gt;&lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class="linenos linenodiv"&gt;&lt;a href="http://blog.povilasb.com/posts/python-ssl-memorybio-usage/#rest_code_095f5aea8f354d988a71f02eb47a8651-44"&gt;&lt;code data-line-number="44"&gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;code&gt;&lt;a id="rest_code_095f5aea8f354d988a71f02eb47a8651-44" name="rest_code_095f5aea8f354d988a71f02eb47a8651-44"&gt;&lt;/a&gt;    &lt;span class="n"&gt;sock&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sendall&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tls_out_buff&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class="linenos linenodiv"&gt;&lt;a href="http://blog.povilasb.com/posts/python-ssl-memorybio-usage/#rest_code_095f5aea8f354d988a71f02eb47a8651-45"&gt;&lt;code data-line-number="45"&gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;code&gt;&lt;a id="rest_code_095f5aea8f354d988a71f02eb47a8651-45" name="rest_code_095f5aea8f354d988a71f02eb47a8651-45"&gt;&lt;/a&gt;
&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class="linenos linenodiv"&gt;&lt;a href="http://blog.povilasb.com/posts/python-ssl-memorybio-usage/#rest_code_095f5aea8f354d988a71f02eb47a8651-46"&gt;&lt;code data-line-number="46"&gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;code&gt;&lt;a id="rest_code_095f5aea8f354d988a71f02eb47a8651-46" name="rest_code_095f5aea8f354d988a71f02eb47a8651-46"&gt;&lt;/a&gt;
&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class="linenos linenodiv"&gt;&lt;a href="http://blog.povilasb.com/posts/python-ssl-memorybio-usage/#rest_code_095f5aea8f354d988a71f02eb47a8651-47"&gt;&lt;code data-line-number="47"&gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;code&gt;&lt;a id="rest_code_095f5aea8f354d988a71f02eb47a8651-47" name="rest_code_095f5aea8f354d988a71f02eb47a8651-47"&gt;&lt;/a&gt;&lt;span class="n"&gt;server_sock&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;socket&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;socket&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class="linenos linenodiv"&gt;&lt;a href="http://blog.povilasb.com/posts/python-ssl-memorybio-usage/#rest_code_095f5aea8f354d988a71f02eb47a8651-48"&gt;&lt;code data-line-number="48"&gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;code&gt;&lt;a id="rest_code_095f5aea8f354d988a71f02eb47a8651-48" name="rest_code_095f5aea8f354d988a71f02eb47a8651-48"&gt;&lt;/a&gt;&lt;span class="n"&gt;server_sock&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;bind&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="s1"&gt;'0.0.0.0'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5000&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class="linenos linenodiv"&gt;&lt;a href="http://blog.povilasb.com/posts/python-ssl-memorybio-usage/#rest_code_095f5aea8f354d988a71f02eb47a8651-49"&gt;&lt;code data-line-number="49"&gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;code&gt;&lt;a id="rest_code_095f5aea8f354d988a71f02eb47a8651-49" name="rest_code_095f5aea8f354d988a71f02eb47a8651-49"&gt;&lt;/a&gt;&lt;span class="n"&gt;server_sock&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;listen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;65535&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class="linenos linenodiv"&gt;&lt;a href="http://blog.povilasb.com/posts/python-ssl-memorybio-usage/#rest_code_095f5aea8f354d988a71f02eb47a8651-50"&gt;&lt;code data-line-number="50"&gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;code&gt;&lt;a id="rest_code_095f5aea8f354d988a71f02eb47a8651-50" name="rest_code_095f5aea8f354d988a71f02eb47a8651-50"&gt;&lt;/a&gt;
&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class="linenos linenodiv"&gt;&lt;a href="http://blog.povilasb.com/posts/python-ssl-memorybio-usage/#rest_code_095f5aea8f354d988a71f02eb47a8651-51"&gt;&lt;code data-line-number="51"&gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;code&gt;&lt;a id="rest_code_095f5aea8f354d988a71f02eb47a8651-51" name="rest_code_095f5aea8f354d988a71f02eb47a8651-51"&gt;&lt;/a&gt;&lt;span class="n"&gt;client_sock&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;_&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;server_sock&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;accept&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class="linenos linenodiv"&gt;&lt;a href="http://blog.povilasb.com/posts/python-ssl-memorybio-usage/#rest_code_095f5aea8f354d988a71f02eb47a8651-52"&gt;&lt;code data-line-number="52"&gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;code&gt;&lt;a id="rest_code_095f5aea8f354d988a71f02eb47a8651-52" name="rest_code_095f5aea8f354d988a71f02eb47a8651-52"&gt;&lt;/a&gt;&lt;span class="n"&gt;respond_to_http_request&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;client_sock&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class="linenos linenodiv"&gt;&lt;a href="http://blog.povilasb.com/posts/python-ssl-memorybio-usage/#rest_code_095f5aea8f354d988a71f02eb47a8651-53"&gt;&lt;code data-line-number="53"&gt;&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;code&gt;&lt;a id="rest_code_095f5aea8f354d988a71f02eb47a8651-53" name="rest_code_095f5aea8f354d988a71f02eb47a8651-53"&gt;&lt;/a&gt;&lt;span class="n"&gt;client_sock&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/section&gt;</description><category>python</category><category>python3</category><category>ssl</category><category>tls</category><guid>http://blog.povilasb.com/posts/python-ssl-memorybio-usage/</guid><pubDate>Tue, 07 Feb 2017 16:47:23 GMT</pubDate></item><item><title>Async write to stdout slower than print?</title><link>http://blog.povilasb.com/posts/async-write-to-stdout-slower-than-print/</link><dc:creator>Povilas Balciunas</dc:creator><description>&lt;p&gt;While implementing HTTP benchmarking tool with asyncio, I was playing with
asyncronous writes to stdout - aka async print.
My motivation was to improve performance of course :).&lt;/p&gt;
&lt;p&gt;But after running some small benchmarks:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code python"&gt;&lt;a id="rest_code_fb491cc2348e49f081df78dea51788ff-1" name="rest_code_fb491cc2348e49f081df78dea51788ff-1" href="http://blog.povilasb.com/posts/async-write-to-stdout-slower-than-print/#rest_code_fb491cc2348e49f081df78dea51788ff-1"&gt;&lt;/a&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;asyncio&lt;/span&gt;
&lt;a id="rest_code_fb491cc2348e49f081df78dea51788ff-2" name="rest_code_fb491cc2348e49f081df78dea51788ff-2" href="http://blog.povilasb.com/posts/async-write-to-stdout-slower-than-print/#rest_code_fb491cc2348e49f081df78dea51788ff-2"&gt;&lt;/a&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;
&lt;a id="rest_code_fb491cc2348e49f081df78dea51788ff-3" name="rest_code_fb491cc2348e49f081df78dea51788ff-3" href="http://blog.povilasb.com/posts/async-write-to-stdout-slower-than-print/#rest_code_fb491cc2348e49f081df78dea51788ff-3"&gt;&lt;/a&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;time&lt;/span&gt;
&lt;a id="rest_code_fb491cc2348e49f081df78dea51788ff-4" name="rest_code_fb491cc2348e49f081df78dea51788ff-4" href="http://blog.povilasb.com/posts/async-write-to-stdout-slower-than-print/#rest_code_fb491cc2348e49f081df78dea51788ff-4"&gt;&lt;/a&gt;
&lt;a id="rest_code_fb491cc2348e49f081df78dea51788ff-5" name="rest_code_fb491cc2348e49f081df78dea51788ff-5" href="http://blog.povilasb.com/posts/async-write-to-stdout-slower-than-print/#rest_code_fb491cc2348e49f081df78dea51788ff-5"&gt;&lt;/a&gt;&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;make_stdout&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;loop&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a id="rest_code_fb491cc2348e49f081df78dea51788ff-6" name="rest_code_fb491cc2348e49f081df78dea51788ff-6" href="http://blog.povilasb.com/posts/async-write-to-stdout-slower-than-print/#rest_code_fb491cc2348e49f081df78dea51788ff-6"&gt;&lt;/a&gt;    &lt;span class="n"&gt;writer_transport&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;writer_protocol&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;loop&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;connect_write_pipe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
&lt;a id="rest_code_fb491cc2348e49f081df78dea51788ff-7" name="rest_code_fb491cc2348e49f081df78dea51788ff-7" href="http://blog.povilasb.com/posts/async-write-to-stdout-slower-than-print/#rest_code_fb491cc2348e49f081df78dea51788ff-7"&gt;&lt;/a&gt;        &lt;span class="n"&gt;FlowControlMixin&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fdopen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'wb'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;a id="rest_code_fb491cc2348e49f081df78dea51788ff-8" name="rest_code_fb491cc2348e49f081df78dea51788ff-8" href="http://blog.povilasb.com/posts/async-write-to-stdout-slower-than-print/#rest_code_fb491cc2348e49f081df78dea51788ff-8"&gt;&lt;/a&gt;    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;asyncio&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;StreamWriter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;writer_transport&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;writer_protocol&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;loop&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_fb491cc2348e49f081df78dea51788ff-9" name="rest_code_fb491cc2348e49f081df78dea51788ff-9" href="http://blog.povilasb.com/posts/async-write-to-stdout-slower-than-print/#rest_code_fb491cc2348e49f081df78dea51788ff-9"&gt;&lt;/a&gt;
&lt;a id="rest_code_fb491cc2348e49f081df78dea51788ff-10" name="rest_code_fb491cc2348e49f081df78dea51788ff-10" href="http://blog.povilasb.com/posts/async-write-to-stdout-slower-than-print/#rest_code_fb491cc2348e49f081df78dea51788ff-10"&gt;&lt;/a&gt;&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;do_async_print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;loop&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a id="rest_code_fb491cc2348e49f081df78dea51788ff-11" name="rest_code_fb491cc2348e49f081df78dea51788ff-11" href="http://blog.povilasb.com/posts/async-write-to-stdout-slower-than-print/#rest_code_fb491cc2348e49f081df78dea51788ff-11"&gt;&lt;/a&gt;    &lt;span class="n"&gt;stdout&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;make_stdout&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;loop&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_fb491cc2348e49f081df78dea51788ff-12" name="rest_code_fb491cc2348e49f081df78dea51788ff-12" href="http://blog.povilasb.com/posts/async-write-to-stdout-slower-than-print/#rest_code_fb491cc2348e49f081df78dea51788ff-12"&gt;&lt;/a&gt;    &lt;span class="n"&gt;started&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a id="rest_code_fb491cc2348e49f081df78dea51788ff-13" name="rest_code_fb491cc2348e49f081df78dea51788ff-13" href="http://blog.povilasb.com/posts/async-write-to-stdout-slower-than-print/#rest_code_fb491cc2348e49f081df78dea51788ff-13"&gt;&lt;/a&gt;    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;_&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;4000&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a id="rest_code_fb491cc2348e49f081df78dea51788ff-14" name="rest_code_fb491cc2348e49f081df78dea51788ff-14" href="http://blog.povilasb.com/posts/async-write-to-stdout-slower-than-print/#rest_code_fb491cc2348e49f081df78dea51788ff-14"&gt;&lt;/a&gt;        &lt;span class="n"&gt;stdout&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;b&lt;/span&gt;&lt;span class="s1"&gt;'works works works works works works works works works works&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_fb491cc2348e49f081df78dea51788ff-15" name="rest_code_fb491cc2348e49f081df78dea51788ff-15" href="http://blog.povilasb.com/posts/async-write-to-stdout-slower-than-print/#rest_code_fb491cc2348e49f081df78dea51788ff-15"&gt;&lt;/a&gt;    &lt;span class="n"&gt;stdout&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;bytes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'Time taken: &lt;/span&gt;&lt;span class="si"&gt;{}&lt;/span&gt;&lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;started&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="s1"&gt;'ascii'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;a id="rest_code_fb491cc2348e49f081df78dea51788ff-16" name="rest_code_fb491cc2348e49f081df78dea51788ff-16" href="http://blog.povilasb.com/posts/async-write-to-stdout-slower-than-print/#rest_code_fb491cc2348e49f081df78dea51788ff-16"&gt;&lt;/a&gt;
&lt;a id="rest_code_fb491cc2348e49f081df78dea51788ff-17" name="rest_code_fb491cc2348e49f081df78dea51788ff-17" href="http://blog.povilasb.com/posts/async-write-to-stdout-slower-than-print/#rest_code_fb491cc2348e49f081df78dea51788ff-17"&gt;&lt;/a&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;test_async_print&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
&lt;a id="rest_code_fb491cc2348e49f081df78dea51788ff-18" name="rest_code_fb491cc2348e49f081df78dea51788ff-18" href="http://blog.povilasb.com/posts/async-write-to-stdout-slower-than-print/#rest_code_fb491cc2348e49f081df78dea51788ff-18"&gt;&lt;/a&gt;    &lt;span class="n"&gt;loop&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;asyncio&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_event_loop&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a id="rest_code_fb491cc2348e49f081df78dea51788ff-19" name="rest_code_fb491cc2348e49f081df78dea51788ff-19" href="http://blog.povilasb.com/posts/async-write-to-stdout-slower-than-print/#rest_code_fb491cc2348e49f081df78dea51788ff-19"&gt;&lt;/a&gt;    &lt;span class="n"&gt;loop&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;run_until_complete&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;do_async_print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;loop&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;a id="rest_code_fb491cc2348e49f081df78dea51788ff-20" name="rest_code_fb491cc2348e49f081df78dea51788ff-20" href="http://blog.povilasb.com/posts/async-write-to-stdout-slower-than-print/#rest_code_fb491cc2348e49f081df78dea51788ff-20"&gt;&lt;/a&gt;    &lt;span class="n"&gt;loop&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a id="rest_code_fb491cc2348e49f081df78dea51788ff-21" name="rest_code_fb491cc2348e49f081df78dea51788ff-21" href="http://blog.povilasb.com/posts/async-write-to-stdout-slower-than-print/#rest_code_fb491cc2348e49f081df78dea51788ff-21"&gt;&lt;/a&gt;
&lt;a id="rest_code_fb491cc2348e49f081df78dea51788ff-22" name="rest_code_fb491cc2348e49f081df78dea51788ff-22" href="http://blog.povilasb.com/posts/async-write-to-stdout-slower-than-print/#rest_code_fb491cc2348e49f081df78dea51788ff-22"&gt;&lt;/a&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;test_sync_print&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
&lt;a id="rest_code_fb491cc2348e49f081df78dea51788ff-23" name="rest_code_fb491cc2348e49f081df78dea51788ff-23" href="http://blog.povilasb.com/posts/async-write-to-stdout-slower-than-print/#rest_code_fb491cc2348e49f081df78dea51788ff-23"&gt;&lt;/a&gt;    &lt;span class="n"&gt;started&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a id="rest_code_fb491cc2348e49f081df78dea51788ff-24" name="rest_code_fb491cc2348e49f081df78dea51788ff-24" href="http://blog.povilasb.com/posts/async-write-to-stdout-slower-than-print/#rest_code_fb491cc2348e49f081df78dea51788ff-24"&gt;&lt;/a&gt;    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;_&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;4000&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a id="rest_code_fb491cc2348e49f081df78dea51788ff-25" name="rest_code_fb491cc2348e49f081df78dea51788ff-25" href="http://blog.povilasb.com/posts/async-write-to-stdout-slower-than-print/#rest_code_fb491cc2348e49f081df78dea51788ff-25"&gt;&lt;/a&gt;        &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'works works works works works works works works works works'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_fb491cc2348e49f081df78dea51788ff-26" name="rest_code_fb491cc2348e49f081df78dea51788ff-26" href="http://blog.povilasb.com/posts/async-write-to-stdout-slower-than-print/#rest_code_fb491cc2348e49f081df78dea51788ff-26"&gt;&lt;/a&gt;    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'Time taken:'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;started&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Turns out that &lt;cite&gt;test_sync_print()&lt;/cite&gt; runs quite faster than &lt;cite&gt;test_async_print()&lt;/cite&gt;.
In average 4000 sync prints run in &lt;strong&gt;100 ms&lt;/strong&gt;, whereas async print in &lt;strong&gt;150
ms&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Also, if I go beyond 4000 prints asynchronous method blocks for unknown reasons.
Synchronous works as expected.&lt;/p&gt;</description><category>asyncio</category><category>python</category><guid>http://blog.povilasb.com/posts/async-write-to-stdout-slower-than-print/</guid><pubDate>Wed, 04 Jan 2017 19:16:55 GMT</pubDate></item><item><title>Machine learning in 3 lines of code</title><link>http://blog.povilasb.com/posts/machine-learning-intro/</link><dc:creator>Povilas Balciunas</dc:creator><description>&lt;p&gt;This is a very light introduction into machine learning.
I will demonstrate how to solve one specific problem using
&lt;a class="reference external" href="http://scikit-learn.org/"&gt;scikit-learn&lt;/a&gt;, a machine learning framework in
just 3 lines of code.&lt;/p&gt;
&lt;section id="problem"&gt;
&lt;h2&gt;Problem&lt;/h2&gt;
&lt;p&gt;I created a syntetic problem where data is very simple so we don't have
to struggle with distilling it.&lt;/p&gt;
&lt;p&gt;Based on very simple rules we have labeled points on a coordinate plane.
If x &amp;gt; 0 and y &amp;lt; 0 then the point is labeled as &lt;em&gt;X&lt;/em&gt;.
If x &amp;lt; 0 and y &amp;gt; 0 then the point is labeled as 'O'.&lt;/p&gt;
&lt;pre class="literal-block"&gt;   o        ^ y
       o    |
     o      |
            |
------------+-------------&amp;gt; x
            |    x
            |       x
            |  x&lt;/pre&gt;
&lt;p&gt;Our task is to label any given point.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Input&lt;/strong&gt;: (x, y)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Output&lt;/strong&gt;: X or O&lt;/p&gt;
&lt;p&gt;E.g.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Input&lt;/strong&gt;: (1, -7)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Output&lt;/strong&gt;: &lt;em&gt;X&lt;/em&gt;&lt;/p&gt;
&lt;/section&gt;
&lt;section id="manual-solution"&gt;
&lt;h2&gt;Manual solution&lt;/h2&gt;
&lt;p&gt;In this case to implement the classification manually using if statements is
really easy:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code python"&gt;&lt;a id="rest_code_20d166dccb324d2b91be176b01cb0dcb-1" name="rest_code_20d166dccb324d2b91be176b01cb0dcb-1" href="http://blog.povilasb.com/posts/machine-learning-intro/#rest_code_20d166dccb324d2b91be176b01cb0dcb-1"&gt;&lt;/a&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;label_for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a id="rest_code_20d166dccb324d2b91be176b01cb0dcb-2" name="rest_code_20d166dccb324d2b91be176b01cb0dcb-2" href="http://blog.povilasb.com/posts/machine-learning-intro/#rest_code_20d166dccb324d2b91be176b01cb0dcb-2"&gt;&lt;/a&gt;    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a id="rest_code_20d166dccb324d2b91be176b01cb0dcb-3" name="rest_code_20d166dccb324d2b91be176b01cb0dcb-3" href="http://blog.povilasb.com/posts/machine-learning-intro/#rest_code_20d166dccb324d2b91be176b01cb0dcb-3"&gt;&lt;/a&gt;        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s1"&gt;'o'&lt;/span&gt;
&lt;a id="rest_code_20d166dccb324d2b91be176b01cb0dcb-4" name="rest_code_20d166dccb324d2b91be176b01cb0dcb-4" href="http://blog.povilasb.com/posts/machine-learning-intro/#rest_code_20d166dccb324d2b91be176b01cb0dcb-4"&gt;&lt;/a&gt;    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a id="rest_code_20d166dccb324d2b91be176b01cb0dcb-5" name="rest_code_20d166dccb324d2b91be176b01cb0dcb-5" href="http://blog.povilasb.com/posts/machine-learning-intro/#rest_code_20d166dccb324d2b91be176b01cb0dcb-5"&gt;&lt;/a&gt;        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s1"&gt;'x'&lt;/span&gt;
&lt;a id="rest_code_20d166dccb324d2b91be176b01cb0dcb-6" name="rest_code_20d166dccb324d2b91be176b01cb0dcb-6" href="http://blog.povilasb.com/posts/machine-learning-intro/#rest_code_20d166dccb324d2b91be176b01cb0dcb-6"&gt;&lt;/a&gt;
&lt;a id="rest_code_20d166dccb324d2b91be176b01cb0dcb-7" name="rest_code_20d166dccb324d2b91be176b01cb0dcb-7" href="http://blog.povilasb.com/posts/machine-learning-intro/#rest_code_20d166dccb324d2b91be176b01cb0dcb-7"&gt;&lt;/a&gt;    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s1"&gt;'?'&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Anyway let's compare with the machine learning implementation.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="machine-learning-solution"&gt;
&lt;h2&gt;Machine learning solution&lt;/h2&gt;
&lt;div class="code"&gt;&lt;pre class="code python"&gt;&lt;a id="rest_code_76187e2246334fafa548e9600353b810-1" name="rest_code_76187e2246334fafa548e9600353b810-1" href="http://blog.povilasb.com/posts/machine-learning-intro/#rest_code_76187e2246334fafa548e9600353b810-1"&gt;&lt;/a&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;sklearn.neighbors&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;KNeighborsClassifier&lt;/span&gt;
&lt;a id="rest_code_76187e2246334fafa548e9600353b810-2" name="rest_code_76187e2246334fafa548e9600353b810-2" href="http://blog.povilasb.com/posts/machine-learning-intro/#rest_code_76187e2246334fafa548e9600353b810-2"&gt;&lt;/a&gt;
&lt;a id="rest_code_76187e2246334fafa548e9600353b810-3" name="rest_code_76187e2246334fafa548e9600353b810-3" href="http://blog.povilasb.com/posts/machine-learning-intro/#rest_code_76187e2246334fafa548e9600353b810-3"&gt;&lt;/a&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;coords&lt;/span&gt;
&lt;a id="rest_code_76187e2246334fafa548e9600353b810-4" name="rest_code_76187e2246334fafa548e9600353b810-4" href="http://blog.povilasb.com/posts/machine-learning-intro/#rest_code_76187e2246334fafa548e9600353b810-4"&gt;&lt;/a&gt;
&lt;a id="rest_code_76187e2246334fafa548e9600353b810-5" name="rest_code_76187e2246334fafa548e9600353b810-5" href="http://blog.povilasb.com/posts/machine-learning-intro/#rest_code_76187e2246334fafa548e9600353b810-5"&gt;&lt;/a&gt;&lt;span class="n"&gt;clf&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;KNeighborsClassifier&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a id="rest_code_76187e2246334fafa548e9600353b810-6" name="rest_code_76187e2246334fafa548e9600353b810-6" href="http://blog.povilasb.com/posts/machine-learning-intro/#rest_code_76187e2246334fafa548e9600353b810-6"&gt;&lt;/a&gt;&lt;span class="n"&gt;clf&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;training_data&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;coords&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;make_n_random&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
&lt;a id="rest_code_76187e2246334fafa548e9600353b810-7" name="rest_code_76187e2246334fafa548e9600353b810-7" href="http://blog.povilasb.com/posts/machine-learning-intro/#rest_code_76187e2246334fafa548e9600353b810-7"&gt;&lt;/a&gt;&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;clf&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;predict&lt;/span&gt;&lt;span class="p"&gt;([[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;]]))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Basically the last 3 lines of code create the classifier, train it with
sample data and predict the labels for the given sample coordinates.
The full solution code is in
&lt;a class="reference external" href="https://github.com/povilasb/machine-learning/blob/master/labeled-coordinates/x_o.py"&gt;https://github.com/povilasb/machine-learning/blob/master/labeled-coordinates/x_o.py&lt;/a&gt;.
If we run it, we get the output:&lt;/p&gt;
&lt;pre class="literal-block"&gt;['x' 'o']&lt;/pre&gt;
&lt;p&gt;Meaning (1, -7) was labeled as 'x' and (-1, 7) as 'o'.
Which is correct.&lt;/p&gt;
&lt;p&gt;Let's take a deeper look how this actually works.&lt;/p&gt;
&lt;section id="obtain-data"&gt;
&lt;h3&gt;Obtain data&lt;/h3&gt;
&lt;p&gt;To make our classifier understand which coordinates have which labels we
must train it with the sample data.&lt;/p&gt;
&lt;p&gt;We will not get training data from anywhere. Instead we will generate it.
We'll use &lt;cite&gt;generate_n_random()&lt;/cite&gt; function from
&lt;a class="reference external" href="https://github.com/povilasb/machine-learning/blob/master/labeled-coordinates/coords.py"&gt;coords&lt;/a&gt;
module to generate N coordinates that comply with my given rules.
Basically, this function returns a list of labeled coordinates:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code python"&gt;&lt;a id="rest_code_14bc8cbcca0d4677b77ecfb55b19c4b6-1" name="rest_code_14bc8cbcca0d4677b77ecfb55b19c4b6-1" href="http://blog.povilasb.com/posts/machine-learning-intro/#rest_code_14bc8cbcca0d4677b77ecfb55b19c4b6-1"&gt;&lt;/a&gt;&lt;span class="p"&gt;[(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'x'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'y'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="o"&gt;...&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/section&gt;
&lt;section id="scrub-data"&gt;
&lt;h3&gt;Scrub data&lt;/h3&gt;
&lt;p&gt;&lt;cite&gt;coords.make_n_random()&lt;/cite&gt; generates labeled coordinates in a different format
than the &lt;cite&gt;scikit-learn&lt;/cite&gt; classifier expects.
So we need to reformat our training data.&lt;/p&gt;
&lt;p&gt;That's where we use &lt;cite&gt;training_data()&lt;/cite&gt; function:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code python"&gt;&lt;a id="rest_code_f21860db033c4e709976bea2500e8852-1" name="rest_code_f21860db033c4e709976bea2500e8852-1" href="http://blog.povilasb.com/posts/machine-learning-intro/#rest_code_f21860db033c4e709976bea2500e8852-1"&gt;&lt;/a&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;training_data&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;coordinates&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a id="rest_code_f21860db033c4e709976bea2500e8852-2" name="rest_code_f21860db033c4e709976bea2500e8852-2" href="http://blog.povilasb.com/posts/machine-learning-intro/#rest_code_f21860db033c4e709976bea2500e8852-2"&gt;&lt;/a&gt;    &lt;span class="sd"&gt;"""Converts coordinates to classifier acceptable format."""&lt;/span&gt;
&lt;a id="rest_code_f21860db033c4e709976bea2500e8852-3" name="rest_code_f21860db033c4e709976bea2500e8852-3" href="http://blog.povilasb.com/posts/machine-learning-intro/#rest_code_f21860db033c4e709976bea2500e8852-3"&gt;&lt;/a&gt;    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
&lt;a id="rest_code_f21860db033c4e709976bea2500e8852-4" name="rest_code_f21860db033c4e709976bea2500e8852-4" href="http://blog.povilasb.com/posts/machine-learning-intro/#rest_code_f21860db033c4e709976bea2500e8852-4"&gt;&lt;/a&gt;        &lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;_&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;coordinates&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
&lt;a id="rest_code_f21860db033c4e709976bea2500e8852-5" name="rest_code_f21860db033c4e709976bea2500e8852-5" href="http://blog.povilasb.com/posts/machine-learning-intro/#rest_code_f21860db033c4e709976bea2500e8852-5"&gt;&lt;/a&gt;        &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;label&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;_&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;_&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;label&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;coordinates&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;a id="rest_code_f21860db033c4e709976bea2500e8852-6" name="rest_code_f21860db033c4e709976bea2500e8852-6" href="http://blog.povilasb.com/posts/machine-learning-intro/#rest_code_f21860db033c4e709976bea2500e8852-6"&gt;&lt;/a&gt;    &lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It separates coordinates and labels into two separate arrays.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="classify-new-data"&gt;
&lt;h3&gt;Classify new data&lt;/h3&gt;
&lt;p&gt;Once we have preprocessed data we can continue with training the model
and classifying new coordinates:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code python"&gt;&lt;a id="rest_code_ea9f515e0dee4257b39a51c3cc48fa4d-1" name="rest_code_ea9f515e0dee4257b39a51c3cc48fa4d-1" href="http://blog.povilasb.com/posts/machine-learning-intro/#rest_code_ea9f515e0dee4257b39a51c3cc48fa4d-1"&gt;&lt;/a&gt;&lt;span class="n"&gt;clf&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;KNeighborsClassifier&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a id="rest_code_ea9f515e0dee4257b39a51c3cc48fa4d-2" name="rest_code_ea9f515e0dee4257b39a51c3cc48fa4d-2" href="http://blog.povilasb.com/posts/machine-learning-intro/#rest_code_ea9f515e0dee4257b39a51c3cc48fa4d-2"&gt;&lt;/a&gt;&lt;span class="n"&gt;clf&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;training_data&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;coords&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;make_n_random&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
&lt;a id="rest_code_ea9f515e0dee4257b39a51c3cc48fa4d-3" name="rest_code_ea9f515e0dee4257b39a51c3cc48fa4d-3" href="http://blog.povilasb.com/posts/machine-learning-intro/#rest_code_ea9f515e0dee4257b39a51c3cc48fa4d-3"&gt;&lt;/a&gt;&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;clf&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;predict&lt;/span&gt;&lt;span class="p"&gt;([[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;]]))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;cite&gt;KNeighborsClassifier&lt;/cite&gt; is a python class that implements the
&lt;a class="reference external" href="https://en.wikipedia.org/wiki/K-nearest_neighbors_algorithm"&gt;k-nearest neighbors algorithm&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;cite&gt;clf.fit()&lt;/cite&gt; trains the classifier with the given labeled data.&lt;/p&gt;
&lt;p&gt;&lt;cite&gt;clf.predict()&lt;/cite&gt; returns predicted labels for the specified coordinates.&lt;/p&gt;
&lt;/section&gt;
&lt;/section&gt;
&lt;section id="machine-learning-vs-manual-solution"&gt;
&lt;h2&gt;Machine learning vs manual solution&lt;/h2&gt;
&lt;p&gt;In this case it's obvious that solving the problem with if statements
is way easier: you don't need to gather any data, scrub it, etc.&lt;/p&gt;
&lt;p&gt;But what if our input data changes as time goes by?&lt;/p&gt;
&lt;p&gt;Let's say now every coordinate where x &amp;gt; 0 and y &amp;gt; 0 is labeled as 's':&lt;/p&gt;
&lt;pre class="literal-block"&gt;   o        ^ y
       o    |    s
     o      |       s
            | s
------------+-------------&amp;gt; x
            |    x
            |       x
            |  x&lt;/pre&gt;
&lt;p&gt;In a machine learning-based implementation we don't need to change anything.
We just have to retrain the model with new data.&lt;/p&gt;
&lt;p&gt;If we implemented the classification manually, we would have to program a new
rule:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code python"&gt;&lt;a id="rest_code_8d41a3417576489fb9cc31e19fb07252-1" name="rest_code_8d41a3417576489fb9cc31e19fb07252-1" href="http://blog.povilasb.com/posts/machine-learning-intro/#rest_code_8d41a3417576489fb9cc31e19fb07252-1"&gt;&lt;/a&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;label_for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a id="rest_code_8d41a3417576489fb9cc31e19fb07252-2" name="rest_code_8d41a3417576489fb9cc31e19fb07252-2" href="http://blog.povilasb.com/posts/machine-learning-intro/#rest_code_8d41a3417576489fb9cc31e19fb07252-2"&gt;&lt;/a&gt;    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a id="rest_code_8d41a3417576489fb9cc31e19fb07252-3" name="rest_code_8d41a3417576489fb9cc31e19fb07252-3" href="http://blog.povilasb.com/posts/machine-learning-intro/#rest_code_8d41a3417576489fb9cc31e19fb07252-3"&gt;&lt;/a&gt;        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s1"&gt;'o'&lt;/span&gt;
&lt;a id="rest_code_8d41a3417576489fb9cc31e19fb07252-4" name="rest_code_8d41a3417576489fb9cc31e19fb07252-4" href="http://blog.povilasb.com/posts/machine-learning-intro/#rest_code_8d41a3417576489fb9cc31e19fb07252-4"&gt;&lt;/a&gt;    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a id="rest_code_8d41a3417576489fb9cc31e19fb07252-5" name="rest_code_8d41a3417576489fb9cc31e19fb07252-5" href="http://blog.povilasb.com/posts/machine-learning-intro/#rest_code_8d41a3417576489fb9cc31e19fb07252-5"&gt;&lt;/a&gt;        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s1"&gt;'x'&lt;/span&gt;
&lt;a id="rest_code_8d41a3417576489fb9cc31e19fb07252-6" name="rest_code_8d41a3417576489fb9cc31e19fb07252-6" href="http://blog.povilasb.com/posts/machine-learning-intro/#rest_code_8d41a3417576489fb9cc31e19fb07252-6"&gt;&lt;/a&gt;&lt;span class="o"&gt;+&lt;/span&gt;   &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a id="rest_code_8d41a3417576489fb9cc31e19fb07252-7" name="rest_code_8d41a3417576489fb9cc31e19fb07252-7" href="http://blog.povilasb.com/posts/machine-learning-intro/#rest_code_8d41a3417576489fb9cc31e19fb07252-7"&gt;&lt;/a&gt;&lt;span class="o"&gt;+&lt;/span&gt;       &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s1"&gt;'s'&lt;/span&gt;
&lt;a id="rest_code_8d41a3417576489fb9cc31e19fb07252-8" name="rest_code_8d41a3417576489fb9cc31e19fb07252-8" href="http://blog.povilasb.com/posts/machine-learning-intro/#rest_code_8d41a3417576489fb9cc31e19fb07252-8"&gt;&lt;/a&gt;
&lt;a id="rest_code_8d41a3417576489fb9cc31e19fb07252-9" name="rest_code_8d41a3417576489fb9cc31e19fb07252-9" href="http://blog.povilasb.com/posts/machine-learning-intro/#rest_code_8d41a3417576489fb9cc31e19fb07252-9"&gt;&lt;/a&gt;    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s1"&gt;'?'&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/section&gt;
&lt;section id="conclusions"&gt;
&lt;h2&gt;Conclusions&lt;/h2&gt;
&lt;p&gt;When we use a framework it might be really easy to solve problems using
machine learning.&lt;/p&gt;
&lt;p&gt;The example problem was easy to implement using if statements.
But any input data changes require to adopt the algorithm.
Also, in real life scenarios problems are not that simple.
For example if we wanted to recognize digits in an image we should program
10 different cases for different digits.
Also, if the digit font changes, we would have to adopt code, etc.
Using machine learning all we need to do is to train our model with new data.
And this is way more scalable.&lt;/p&gt;
&lt;p&gt;So machine learning helps to solve a lot of otherwise unsolvable problems.
And we don't really need to understand the maths behind it because
there are great tools that do the job for us.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="environment-setup"&gt;
&lt;h2&gt;Environment setup&lt;/h2&gt;
&lt;p&gt;I used the &lt;cite&gt;scikit-learn&lt;/cite&gt; framework with python 3.
It depends on a lot of other packages.
So if you dont have &lt;cite&gt;scikit-learn&lt;/cite&gt; installed on your machine,
I created a &lt;a class="reference external" href="https://hub.docker.com/r/povilasb/scikit-learn/"&gt;Docker container&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Now all you have to do to run your python script in this environment is:&lt;/p&gt;
&lt;pre class="literal-block"&gt;$ docker run -it --rm=true -v `pwd`:/tmp/ml povilasb/scikit-learn python3 /tmp/ml/x_o.py&lt;/pre&gt;
&lt;p&gt;This command will download Docker image, create a container, run the
specified script in it and finally destroy it.&lt;/p&gt;
&lt;/section&gt;</description><category>ml</category><category>python</category><guid>http://blog.povilasb.com/posts/machine-learning-intro/</guid><pubDate>Sun, 07 Aug 2016 02:34:00 GMT</pubDate></item><item><title>Getting started with Sphinx</title><link>http://blog.povilasb.com/posts/sphinx-getting-started/</link><dc:creator>Povilas Balciunas</dc:creator><description>&lt;p&gt;Sphinx is a tool written in Python that automatically generates documentation
from reST (restructured text) files.&lt;/p&gt;
&lt;p&gt;Some popular libraries, tools using Sphinx:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;OpenCV &lt;a class="reference external" href="http://docs.opencv.org/"&gt;http://docs.opencv.org/&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Jinja &lt;a class="reference external" href="http://jinja.pocoo.org/docs/"&gt;http://jinja.pocoo.org/docs/&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Buildbot &lt;a class="reference external" href="http://docs.buildbot.net/"&gt;http://docs.buildbot.net/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Fabric &lt;a class="reference external" href="http://docs.fabfile.org"&gt;http://docs.fabfile.org&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In this article I'll show you how to:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;&lt;p&gt;Setup the environment.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Create simple reST files.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Generate HTML documents from reST.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Get the sample project from github
&lt;a class="reference external" href="https://github.com/povilasb-com/sphinx-first-steps"&gt;https://github.com/povilasb-com/sphinx-first-steps&lt;/a&gt;.&lt;/p&gt;
&lt;section id="setup-the-environment"&gt;
&lt;h2&gt;Setup the environment&lt;/h2&gt;
&lt;p&gt;I'll be using Debian 7.3 system. Get the neccessary packages:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code bash"&gt;&lt;a id="rest_code_5293e3e67cc64a3b91cafd2310294e5c-1" name="rest_code_5293e3e67cc64a3b91cafd2310294e5c-1" href="http://blog.povilasb.com/posts/sphinx-getting-started/#rest_code_5293e3e67cc64a3b91cafd2310294e5c-1"&gt;&lt;/a&gt;sudo apt-get install sphinx-doc
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Build initial project structure:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code bash"&gt;&lt;a id="rest_code_532571af7fe94875a6932ef020c2eb6d-1" name="rest_code_532571af7fe94875a6932ef020c2eb6d-1" href="http://blog.povilasb.com/posts/sphinx-getting-started/#rest_code_532571af7fe94875a6932ef020c2eb6d-1"&gt;&lt;/a&gt;sphinx-quickstart
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You will be prompted with many options. For the start I advise you to choose
the default ones except for "Separate source and build directories" choose
"Yes". This way you'll have a nice project structure with separated source
and build directories:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code bash"&gt;&lt;a id="rest_code_130995200dde4702addeddeca4241d8e-1" name="rest_code_130995200dde4702addeddeca4241d8e-1" href="http://blog.povilasb.com/posts/sphinx-getting-started/#rest_code_130995200dde4702addeddeca4241d8e-1"&gt;&lt;/a&gt;$ ls
&lt;a id="rest_code_130995200dde4702addeddeca4241d8e-2" name="rest_code_130995200dde4702addeddeca4241d8e-2" href="http://blog.povilasb.com/posts/sphinx-getting-started/#rest_code_130995200dde4702addeddeca4241d8e-2"&gt;&lt;/a&gt;./build Makefile ./source
&lt;/pre&gt;&lt;/div&gt;
&lt;/section&gt;
&lt;section id="create-simple-rest-files"&gt;
&lt;h2&gt;Create simple reST files&lt;/h2&gt;
&lt;p&gt;"reStructuredText is plaintext that uses simple and intuitive constructs to
indicate the structure of a document." &lt;a class="footnote-reference brackets" href="http://blog.povilasb.com/posts/sphinx-getting-started/#f2" id="footnote-reference-1" role="doc-noteref"&gt;&lt;span class="fn-bracket"&gt;[&lt;/span&gt;2&lt;span class="fn-bracket"&gt;]&lt;/span&gt;&lt;/a&gt; Let's create a simple
documentation consisting of two pages: &lt;strong&gt;main&lt;/strong&gt; and &lt;strong&gt;contact&lt;/strong&gt; pages.
File structure would look like this:&lt;/p&gt;
&lt;pre class="literal-block"&gt;$tree .
.
|__ build
|__ Makefile
|__ source
   |__ conf.py
   |__ index.rst
   |__ misc
      |__ contact.rst&lt;/pre&gt;
&lt;section id="main-page"&gt;
&lt;h3&gt;Main page&lt;/h3&gt;
&lt;p&gt;By default the first page loaded is index.rst (it might be changed in conf.py).
You might want to put brief description and table of contents into this page:&lt;/p&gt;
&lt;pre class="literal-block"&gt;=====
Intro
=====

This is an index page of my documentation generated with Sphinx.
Checkout TOC for further info.

Content
=======

.. toctree::

        Contacts &amp;lt;misc/contact.rst&amp;gt;&lt;/pre&gt;
&lt;/section&gt;
&lt;section id="contacts-page"&gt;
&lt;h3&gt;Contacts page&lt;/h3&gt;
&lt;p&gt;This page might be as simple as a single table:&lt;/p&gt;
&lt;pre class="literal-block"&gt;==========
Contact us
==========

+--------------+---------------+
| Mobile phone | +1xxxxxxx     |
+--------------+---------------+
| Email        + info@mail.com |
+--------------+---------------+&lt;/pre&gt;
&lt;/section&gt;
&lt;/section&gt;
&lt;section id="generate-html-documents-from-rest"&gt;
&lt;h2&gt;Generate HTML documents from reST&lt;/h2&gt;
&lt;p&gt;To genera html document from reST files simply invoke for the Makefile
generated by &lt;em&gt;sphinx-quickstart&lt;/em&gt;:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code bash"&gt;&lt;a id="rest_code_c80bdff72a3444f29e8e807732aee4a4-1" name="rest_code_c80bdff72a3444f29e8e807732aee4a4-1" href="http://blog.povilasb.com/posts/sphinx-getting-started/#rest_code_c80bdff72a3444f29e8e807732aee4a4-1"&gt;&lt;/a&gt;make html
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This will build documentation in &lt;em&gt;./build/html&lt;/em&gt;. Open &lt;em&gt;./build/html/index.html&lt;/em&gt;
in your browser to check it out.&lt;/p&gt;
&lt;p class="rubric"&gt;References&lt;/p&gt;
&lt;aside class="footnote-list brackets"&gt;
&lt;aside class="footnote brackets" id="f1" role="note"&gt;
&lt;span class="label"&gt;&lt;span class="fn-bracket"&gt;[&lt;/span&gt;1&lt;span class="fn-bracket"&gt;]&lt;/span&gt;&lt;/span&gt;
&lt;p&gt;&lt;a class="reference external" href="http://sphinx-doc.org/tutorial.html"&gt;http://sphinx-doc.org/tutorial.html&lt;/a&gt;&lt;/p&gt;
&lt;/aside&gt;
&lt;aside class="footnote brackets" id="f2" role="note"&gt;
&lt;span class="label"&gt;&lt;span class="fn-bracket"&gt;[&lt;/span&gt;&lt;a role="doc-backlink" href="http://blog.povilasb.com/posts/sphinx-getting-started/#footnote-reference-1"&gt;2&lt;/a&gt;&lt;span class="fn-bracket"&gt;]&lt;/span&gt;&lt;/span&gt;
&lt;p&gt;&lt;a class="reference external" href="http://docutils.sourceforge.net/docs/ref/rst/restructuredtext.html"&gt;http://docutils.sourceforge.net/docs/ref/rst/restructuredtext.html&lt;/a&gt;&lt;/p&gt;
&lt;/aside&gt;
&lt;aside class="footnote brackets" id="f3" role="note"&gt;
&lt;span class="label"&gt;&lt;span class="fn-bracket"&gt;[&lt;/span&gt;3&lt;span class="fn-bracket"&gt;]&lt;/span&gt;&lt;/span&gt;
&lt;p&gt;&lt;a class="reference external" href="http://sphinx-doc.org/rest.html"&gt;http://sphinx-doc.org/rest.html&lt;/a&gt;&lt;/p&gt;
&lt;/aside&gt;
&lt;/aside&gt;
&lt;/section&gt;</description><category>docs</category><category>python</category><category>sphinx</category><guid>http://blog.povilasb.com/posts/sphinx-getting-started/</guid><pubDate>Fri, 21 Feb 2014 17:18:00 GMT</pubDate></item></channel></rss>