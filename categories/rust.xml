<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Povilas Blog (Posts about rust)</title><link>http://blog.povilasb.com/</link><description></description><atom:link href="http://blog.povilasb.com/categories/rust.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><lastBuildDate>Sun, 11 Dec 2022 18:28:53 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Rust - First Steps</title><link>http://blog.povilasb.com/posts/rust-first-steps/</link><dc:creator>Povilas Balciunas</dc:creator><description>&lt;p&gt;I was interested in Rust quite a while but never found spare time to
experiment with it.
Also, recently I found &lt;a class="reference external" href="https://www.redox-os.org/"&gt;https://www.redox-os.org/&lt;/a&gt; - an OS with Rust based
microkernel. I always thought that it would be nice to customize the OS kernel.
But Linux being a monolithic kernel and written in C sounds like a lot of work
to do any changes.
So, in order to play with Redox I have to know some Rust :)&lt;/p&gt;
&lt;section id="hello-world"&gt;
&lt;h2&gt;Hello World&lt;/h2&gt;
&lt;p&gt;As usual the very first code I wrote was a hello world application:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code rust"&gt;&lt;a id="rest_code_2ab72582aa1b4346ae866ff252123597-1" name="rest_code_2ab72582aa1b4346ae866ff252123597-1" href="http://blog.povilasb.com/posts/rust-first-steps/#rest_code_2ab72582aa1b4346ae866ff252123597-1"&gt;&lt;/a&gt;&lt;span class="k"&gt;fn&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_2ab72582aa1b4346ae866ff252123597-2" name="rest_code_2ab72582aa1b4346ae866ff252123597-2" href="http://blog.povilasb.com/posts/rust-first-steps/#rest_code_2ab72582aa1b4346ae866ff252123597-2"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="fm"&gt;println!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Hello world"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_2ab72582aa1b4346ae866ff252123597-3" name="rest_code_2ab72582aa1b4346ae866ff252123597-3" href="http://blog.povilasb.com/posts/rust-first-steps/#rest_code_2ab72582aa1b4346ae866ff252123597-3"&gt;&lt;/a&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This reminds me a lot of C: main entry point is called &lt;cite&gt;main&lt;/cite&gt;, double
quoted strings and semicolon after the statement.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="variables"&gt;
&lt;h2&gt;Variables&lt;/h2&gt;
&lt;p&gt;In Rust variables are immutable (const in C++) by default:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code rust"&gt;&lt;a id="rest_code_923b94399c284b08a2cba0fe4fa1e3b6-1" name="rest_code_923b94399c284b08a2cba0fe4fa1e3b6-1" href="http://blog.povilasb.com/posts/rust-first-steps/#rest_code_923b94399c284b08a2cba0fe4fa1e3b6-1"&gt;&lt;/a&gt;&lt;span class="kd"&gt;let&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;: &lt;span class="kt"&gt;u8&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_923b94399c284b08a2cba0fe4fa1e3b6-2" name="rest_code_923b94399c284b08a2cba0fe4fa1e3b6-2" href="http://blog.povilasb.com/posts/rust-first-steps/#rest_code_923b94399c284b08a2cba0fe4fa1e3b6-2"&gt;&lt;/a&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;// results in error&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Mutable variables are marked explicitly:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code rust"&gt;&lt;a id="rest_code_440e351ac5ab4ab0b02fde86fd9982da-1" name="rest_code_440e351ac5ab4ab0b02fde86fd9982da-1" href="http://blog.povilasb.com/posts/rust-first-steps/#rest_code_440e351ac5ab4ab0b02fde86fd9982da-1"&gt;&lt;/a&gt;&lt;span class="kd"&gt;let&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;mut&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;: &lt;span class="kt"&gt;u8&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_440e351ac5ab4ab0b02fde86fd9982da-2" name="rest_code_440e351ac5ab4ab0b02fde86fd9982da-2" href="http://blog.povilasb.com/posts/rust-first-steps/#rest_code_440e351ac5ab4ab0b02fde86fd9982da-2"&gt;&lt;/a&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Rust uses static typing system but you don't necessarily have to specify
the variable type:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code rust"&gt;&lt;a id="rest_code_7dd803532f294b6ba6b8fa72c6208afb-1" name="rest_code_7dd803532f294b6ba6b8fa72c6208afb-1" href="http://blog.povilasb.com/posts/rust-first-steps/#rest_code_7dd803532f294b6ba6b8fa72c6208afb-1"&gt;&lt;/a&gt;&lt;span class="kd"&gt;let&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Compiler infers the variable type just like
&lt;a class="reference external" href="http://en.cppreference.com/w/cpp/language/auto"&gt;C++&lt;/a&gt; and
&lt;a class="reference external" href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/TheBasics.html#//apple_ref/doc/uid/TP40014097-CH5-ID322"&gt;Swift&lt;/a&gt; does.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="strings"&gt;
&lt;h2&gt;Strings&lt;/h2&gt;
&lt;p&gt;String operations are very common in every language. So good string support
can make developer's life a lot easier.&lt;/p&gt;
&lt;p&gt;Rust has two string types: &lt;cite&gt;&amp;amp;str&lt;/cite&gt; and &lt;cite&gt;String&lt;/cite&gt;.
&lt;cite&gt;String&lt;/cite&gt; handles UTF-8
I was suprised to see that symbol indexing does not work with &lt;cite&gt;String&lt;/cite&gt;:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code rust"&gt;&lt;a id="rest_code_a79d33a27d8541ce85842da7417728b4-1" name="rest_code_a79d33a27d8541ce85842da7417728b4-1" href="http://blog.povilasb.com/posts/rust-first-steps/#rest_code_a79d33a27d8541ce85842da7417728b4-1"&gt;&lt;/a&gt;&lt;span class="kd"&gt;let&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;: &lt;span class="nb"&gt;String&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"sample string"&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;to_string&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_a79d33a27d8541ce85842da7417728b4-2" name="rest_code_a79d33a27d8541ce85842da7417728b4-2" href="http://blog.povilasb.com/posts/rust-first-steps/#rest_code_a79d33a27d8541ce85842da7417728b4-2"&gt;&lt;/a&gt;&lt;span class="fm"&gt;println!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"{}"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;// results in compilation error&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And this makes sense: it's not so easy to index UTF-8 strings, because
each symbol has a variable length of bytes. Thus accessing UTF-8 string
character at position &lt;cite&gt;x&lt;/cite&gt; has O(n) complexity.
Usually, when we are indexing an array we expect O(1) operation.
So we're better off accessing characters explicitly:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code rust"&gt;&lt;a id="rest_code_8e16fc19c048461aa02d8500c54cf725-1" name="rest_code_8e16fc19c048461aa02d8500c54cf725-1" href="http://blog.povilasb.com/posts/rust-first-steps/#rest_code_8e16fc19c048461aa02d8500c54cf725-1"&gt;&lt;/a&gt;&lt;span class="s"&gt;"hello"&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;to_string&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="n"&gt;chars&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="n"&gt;nth&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;unwrap&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;// returns 'e'&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Rust has a bytes literal identical to Python&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code rust"&gt;&lt;a id="rest_code_c3e530840d3149a1ba361c0dd1467f7b-1" name="rest_code_c3e530840d3149a1ba361c0dd1467f7b-1" href="http://blog.povilasb.com/posts/rust-first-steps/#rest_code_c3e530840d3149a1ba361c0dd1467f7b-1"&gt;&lt;/a&gt;&lt;span class="s"&gt;b"binary data"&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/section&gt;
&lt;section id="functions"&gt;
&lt;h2&gt;Functions&lt;/h2&gt;
&lt;p&gt;Rust function definitions remind me of &lt;a class="reference external" href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/Functions.html"&gt;Swift ones&lt;/a&gt;
or &lt;a class="reference external" href="http://www.mypy-lang.org/examples.html"&gt;Python type hints&lt;/a&gt;.&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code rust"&gt;&lt;a id="rest_code_9112194b723049ba9e7e76f955d6f5b7-1" name="rest_code_9112194b723049ba9e7e76f955d6f5b7-1" href="http://blog.povilasb.com/posts/rust-first-steps/#rest_code_9112194b723049ba9e7e76f955d6f5b7-1"&gt;&lt;/a&gt;&lt;span class="k"&gt;fn&lt;/span&gt; &lt;span class="nf"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;: &lt;span class="kt"&gt;i64&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;: &lt;span class="kt"&gt;i64&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;-&amp;gt; &lt;span class="kt"&gt;i64&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_9112194b723049ba9e7e76f955d6f5b7-2" name="rest_code_9112194b723049ba9e7e76f955d6f5b7-2" href="http://blog.povilasb.com/posts/rust-first-steps/#rest_code_9112194b723049ba9e7e76f955d6f5b7-2"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_9112194b723049ba9e7e76f955d6f5b7-3" name="rest_code_9112194b723049ba9e7e76f955d6f5b7-3" href="http://blog.povilasb.com/posts/rust-first-steps/#rest_code_9112194b723049ba9e7e76f955d6f5b7-3"&gt;&lt;/a&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In Rust almost everything is an expression. Just like in Ruby. So &lt;cite&gt;return&lt;/cite&gt;
statement might be omitted:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code rust"&gt;&lt;a id="rest_code_bad258cafd044c588060b0590fbc374f-1" name="rest_code_bad258cafd044c588060b0590fbc374f-1" href="http://blog.povilasb.com/posts/rust-first-steps/#rest_code_bad258cafd044c588060b0590fbc374f-1"&gt;&lt;/a&gt;&lt;span class="k"&gt;fn&lt;/span&gt; &lt;span class="nf"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;: &lt;span class="kt"&gt;i64&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;: &lt;span class="kt"&gt;i64&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;-&amp;gt; &lt;span class="kt"&gt;i64&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_bad258cafd044c588060b0590fbc374f-2" name="rest_code_bad258cafd044c588060b0590fbc374f-2" href="http://blog.povilasb.com/posts/rust-first-steps/#rest_code_bad258cafd044c588060b0590fbc374f-2"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_bad258cafd044c588060b0590fbc374f-3" name="rest_code_bad258cafd044c588060b0590fbc374f-3" href="http://blog.povilasb.com/posts/rust-first-steps/#rest_code_bad258cafd044c588060b0590fbc374f-3"&gt;&lt;/a&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Lambda functions are called &lt;a class="reference external" href="https://doc.rust-lang.org/book/closures.html"&gt;closures&lt;/a&gt; in Rust.
Their syntax reminds me of &lt;a class="reference external" href="http://culttt.com/2015/05/13/what-are-lambdas-in-ruby/"&gt;Ruby&lt;/a&gt;:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code rust"&gt;&lt;a id="rest_code_61094099bb914ae69ad1cc265cbb9d9e-1" name="rest_code_61094099bb914ae69ad1cc265cbb9d9e-1" href="http://blog.povilasb.com/posts/rust-first-steps/#rest_code_61094099bb914ae69ad1cc265cbb9d9e-1"&gt;&lt;/a&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="n"&gt;iter&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="n"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_61094099bb914ae69ad1cc265cbb9d9e-2" name="rest_code_61094099bb914ae69ad1cc265cbb9d9e-2" href="http://blog.povilasb.com/posts/rust-first-steps/#rest_code_61094099bb914ae69ad1cc265cbb9d9e-2"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="fm"&gt;println!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"{}"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;// prints 2, 3, 4&lt;/span&gt;
&lt;a id="rest_code_61094099bb914ae69ad1cc265cbb9d9e-3" name="rest_code_61094099bb914ae69ad1cc265cbb9d9e-3" href="http://blog.povilasb.com/posts/rust-first-steps/#rest_code_61094099bb914ae69ad1cc265cbb9d9e-3"&gt;&lt;/a&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/section&gt;
&lt;section id="optional"&gt;
&lt;h2&gt;Optional&lt;/h2&gt;
&lt;p&gt;Rust has &lt;cite&gt;optional types &amp;lt;https://doc.rust-lang.org/std/option/&amp;gt;_&lt;/cite&gt; which
represent variables that might not have any value.
They seem similar to Swift's optionals:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code rust"&gt;&lt;a id="rest_code_1b757e30403946fb85a942eabbbfc2a6-1" name="rest_code_1b757e30403946fb85a942eabbbfc2a6-1" href="http://blog.povilasb.com/posts/rust-first-steps/#rest_code_1b757e30403946fb85a942eabbbfc2a6-1"&gt;&lt;/a&gt;&lt;span class="k"&gt;fn&lt;/span&gt; &lt;span class="nf"&gt;div&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;: &lt;span class="kt"&gt;f64&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;: &lt;span class="kt"&gt;f64&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;-&amp;gt; &lt;span class="nb"&gt;Option&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;f64&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_1b757e30403946fb85a942eabbbfc2a6-2" name="rest_code_1b757e30403946fb85a942eabbbfc2a6-2" href="http://blog.povilasb.com/posts/rust-first-steps/#rest_code_1b757e30403946fb85a942eabbbfc2a6-2"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;0.0&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_1b757e30403946fb85a942eabbbfc2a6-3" name="rest_code_1b757e30403946fb85a942eabbbfc2a6-3" href="http://blog.povilasb.com/posts/rust-first-steps/#rest_code_1b757e30403946fb85a942eabbbfc2a6-3"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nb"&gt;None&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_1b757e30403946fb85a942eabbbfc2a6-4" name="rest_code_1b757e30403946fb85a942eabbbfc2a6-4" href="http://blog.povilasb.com/posts/rust-first-steps/#rest_code_1b757e30403946fb85a942eabbbfc2a6-4"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_1b757e30403946fb85a942eabbbfc2a6-5" name="rest_code_1b757e30403946fb85a942eabbbfc2a6-5" href="http://blog.povilasb.com/posts/rust-first-steps/#rest_code_1b757e30403946fb85a942eabbbfc2a6-5"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nb"&gt;Some&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_1b757e30403946fb85a942eabbbfc2a6-6" name="rest_code_1b757e30403946fb85a942eabbbfc2a6-6" href="http://blog.povilasb.com/posts/rust-first-steps/#rest_code_1b757e30403946fb85a942eabbbfc2a6-6"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_1b757e30403946fb85a942eabbbfc2a6-7" name="rest_code_1b757e30403946fb85a942eabbbfc2a6-7" href="http://blog.povilasb.com/posts/rust-first-steps/#rest_code_1b757e30403946fb85a942eabbbfc2a6-7"&gt;&lt;/a&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_1b757e30403946fb85a942eabbbfc2a6-8" name="rest_code_1b757e30403946fb85a942eabbbfc2a6-8" href="http://blog.povilasb.com/posts/rust-first-steps/#rest_code_1b757e30403946fb85a942eabbbfc2a6-8"&gt;&lt;/a&gt;
&lt;a id="rest_code_1b757e30403946fb85a942eabbbfc2a6-9" name="rest_code_1b757e30403946fb85a942eabbbfc2a6-9" href="http://blog.povilasb.com/posts/rust-first-steps/#rest_code_1b757e30403946fb85a942eabbbfc2a6-9"&gt;&lt;/a&gt;&lt;span class="fm"&gt;println!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"{}"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;div&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;10.0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;2.0&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;unwrap&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Also, in case of None I can specify default value:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code rust"&gt;&lt;a id="rest_code_4ca5904be6114784b01778da9411c3a2-1" name="rest_code_4ca5904be6114784b01778da9411c3a2-1" href="http://blog.povilasb.com/posts/rust-first-steps/#rest_code_4ca5904be6114784b01778da9411c3a2-1"&gt;&lt;/a&gt;&lt;span class="fm"&gt;println!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"{}"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;div&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;10.0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;0.0&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;unwrap_or&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;0.0&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/section&gt;
&lt;section id="dependency-manager"&gt;
&lt;h2&gt;Dependency Manager&lt;/h2&gt;
&lt;p&gt;Rust has a dependency manager, Cargo, which is also a build system.
First of all, this is super cool, because C and C++ doesn't have a widely
adopted dependency manager. Except a couple attempts to implement one:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://github.com/biicode/"&gt;https://github.com/biicode/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://www.conan.io/"&gt;https://www.conan.io/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Also, C and C++ have so many build systems that it's easy to get lost:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://www.gnu.org/software/make/"&gt;GNU Make&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://www.gnu.org/software/automake/"&gt;Automake + Autoconf&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://cmake.org/"&gt;CMake&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://ninja-build.org/"&gt;Ninja&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="http://scons.org/"&gt;Scons&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;And recently I just found out that Google is building another one - &lt;a class="reference external" href="https://bazel.build/"&gt;Bazel&lt;/a&gt;. Which they are using to build Tensorflow...&lt;/p&gt;
&lt;p&gt;From time to time I see those used actively, not just listed in Wikipedia.&lt;/p&gt;
&lt;p&gt;I like the Zen of Python:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;There should be one-- and preferably only one --obvious way to do it.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;And regarding build tools in C, C++ world, this is not the case :/
So although I used Cargo only for two days, I loved the way it works.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="compiler"&gt;
&lt;h2&gt;Compiler&lt;/h2&gt;
&lt;p&gt;&lt;cite&gt;rustc&lt;/cite&gt; - initially implemented in OCaml, later rewritten in Rust itself.
It has some nice features that caught my eye.
It has plugin system: &lt;a class="reference external" href="https://doc.rust-lang.org/book/compiler-plugins.html"&gt;https://doc.rust-lang.org/book/compiler-plugins.html&lt;/a&gt;,
which allows us to extend the compilers behavior like manipulate the AST, etc.&lt;/p&gt;
&lt;p&gt;Another feature I find really attractive is &lt;a class="reference external" href="https://doc.rust-lang.org/book/attributes.html"&gt;attributes&lt;/a&gt;. They allow to
annotate/label definitions. E.g. there is an attribute that labels function
as a test:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code rust"&gt;&lt;a id="rest_code_5a70bc7ca9ce4830b51b906bfcf28d69-1" name="rest_code_5a70bc7ca9ce4830b51b906bfcf28d69-1" href="http://blog.povilasb.com/posts/rust-first-steps/#rest_code_5a70bc7ca9ce4830b51b906bfcf28d69-1"&gt;&lt;/a&gt;&lt;span class="cp"&gt;#[test]&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_5a70bc7ca9ce4830b51b906bfcf28d69-2" name="rest_code_5a70bc7ca9ce4830b51b906bfcf28d69-2" href="http://blog.povilasb.com/posts/rust-first-steps/#rest_code_5a70bc7ca9ce4830b51b906bfcf28d69-2"&gt;&lt;/a&gt;&lt;span class="k"&gt;fn&lt;/span&gt; &lt;span class="nf"&gt;it_works&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_5a70bc7ca9ce4830b51b906bfcf28d69-3" name="rest_code_5a70bc7ca9ce4830b51b906bfcf28d69-3" href="http://blog.povilasb.com/posts/rust-first-steps/#rest_code_5a70bc7ca9ce4830b51b906bfcf28d69-3"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="fm"&gt;assert!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_5a70bc7ca9ce4830b51b906bfcf28d69-4" name="rest_code_5a70bc7ca9ce4830b51b906bfcf28d69-4" href="http://blog.povilasb.com/posts/rust-first-steps/#rest_code_5a70bc7ca9ce4830b51b906bfcf28d69-4"&gt;&lt;/a&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then cargo finds those labelled functions and execute them simply running:&lt;/p&gt;
&lt;pre class="literal-block"&gt;$ cargo test&lt;/pre&gt;
&lt;p&gt;Also, attributes can be used to select which code to compile for
specific platform.
Compare:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code rust"&gt;&lt;a id="rest_code_6f8c99ce309045bd85a5e0f11949e4e3-1" name="rest_code_6f8c99ce309045bd85a5e0f11949e4e3-1" href="http://blog.povilasb.com/posts/rust-first-steps/#rest_code_6f8c99ce309045bd85a5e0f11949e4e3-1"&gt;&lt;/a&gt;&lt;span class="cp"&gt;#[cfg(target_os = &lt;/span&gt;&lt;span class="s"&gt;"linux"&lt;/span&gt;&lt;span class="cp"&gt;)]&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_6f8c99ce309045bd85a5e0f11949e4e3-2" name="rest_code_6f8c99ce309045bd85a5e0f11949e4e3-2" href="http://blog.povilasb.com/posts/rust-first-steps/#rest_code_6f8c99ce309045bd85a5e0f11949e4e3-2"&gt;&lt;/a&gt;&lt;span class="k"&gt;fn&lt;/span&gt; &lt;span class="nf"&gt;do_stuff&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_6f8c99ce309045bd85a5e0f11949e4e3-3" name="rest_code_6f8c99ce309045bd85a5e0f11949e4e3-3" href="http://blog.povilasb.com/posts/rust-first-steps/#rest_code_6f8c99ce309045bd85a5e0f11949e4e3-3"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="fm"&gt;println!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"You are running linux!"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_6f8c99ce309045bd85a5e0f11949e4e3-4" name="rest_code_6f8c99ce309045bd85a5e0f11949e4e3-4" href="http://blog.povilasb.com/posts/rust-first-steps/#rest_code_6f8c99ce309045bd85a5e0f11949e4e3-4"&gt;&lt;/a&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_6f8c99ce309045bd85a5e0f11949e4e3-5" name="rest_code_6f8c99ce309045bd85a5e0f11949e4e3-5" href="http://blog.povilasb.com/posts/rust-first-steps/#rest_code_6f8c99ce309045bd85a5e0f11949e4e3-5"&gt;&lt;/a&gt;
&lt;a id="rest_code_6f8c99ce309045bd85a5e0f11949e4e3-6" name="rest_code_6f8c99ce309045bd85a5e0f11949e4e3-6" href="http://blog.povilasb.com/posts/rust-first-steps/#rest_code_6f8c99ce309045bd85a5e0f11949e4e3-6"&gt;&lt;/a&gt;&lt;span class="cp"&gt;#[cfg(target_os = &lt;/span&gt;&lt;span class="s"&gt;"windows"&lt;/span&gt;&lt;span class="cp"&gt;)]&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_6f8c99ce309045bd85a5e0f11949e4e3-7" name="rest_code_6f8c99ce309045bd85a5e0f11949e4e3-7" href="http://blog.povilasb.com/posts/rust-first-steps/#rest_code_6f8c99ce309045bd85a5e0f11949e4e3-7"&gt;&lt;/a&gt;&lt;span class="k"&gt;fn&lt;/span&gt; &lt;span class="nf"&gt;do_stuff&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_6f8c99ce309045bd85a5e0f11949e4e3-8" name="rest_code_6f8c99ce309045bd85a5e0f11949e4e3-8" href="http://blog.povilasb.com/posts/rust-first-steps/#rest_code_6f8c99ce309045bd85a5e0f11949e4e3-8"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="fm"&gt;println!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"You are running windows!"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_6f8c99ce309045bd85a5e0f11949e4e3-9" name="rest_code_6f8c99ce309045bd85a5e0f11949e4e3-9" href="http://blog.povilasb.com/posts/rust-first-steps/#rest_code_6f8c99ce309045bd85a5e0f11949e4e3-9"&gt;&lt;/a&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;with C++ implementation:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code cpp"&gt;&lt;a id="rest_code_fe060b3253544badae5307029e132574-1" name="rest_code_fe060b3253544badae5307029e132574-1" href="http://blog.povilasb.com/posts/rust-first-steps/#rest_code_fe060b3253544badae5307029e132574-1"&gt;&lt;/a&gt;&lt;span class="cp"&gt;#ifdef __linux&lt;/span&gt;
&lt;a id="rest_code_fe060b3253544badae5307029e132574-2" name="rest_code_fe060b3253544badae5307029e132574-2" href="http://blog.povilasb.com/posts/rust-first-steps/#rest_code_fe060b3253544badae5307029e132574-2"&gt;&lt;/a&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;do_stuff&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_fe060b3253544badae5307029e132574-3" name="rest_code_fe060b3253544badae5307029e132574-3" href="http://blog.povilasb.com/posts/rust-first-steps/#rest_code_fe060b3253544badae5307029e132574-3"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"Your are running linux!&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_fe060b3253544badae5307029e132574-4" name="rest_code_fe060b3253544badae5307029e132574-4" href="http://blog.povilasb.com/posts/rust-first-steps/#rest_code_fe060b3253544badae5307029e132574-4"&gt;&lt;/a&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_fe060b3253544badae5307029e132574-5" name="rest_code_fe060b3253544badae5307029e132574-5" href="http://blog.povilasb.com/posts/rust-first-steps/#rest_code_fe060b3253544badae5307029e132574-5"&gt;&lt;/a&gt;&lt;span class="cp"&gt;#elif _WIN32&lt;/span&gt;
&lt;a id="rest_code_fe060b3253544badae5307029e132574-6" name="rest_code_fe060b3253544badae5307029e132574-6" href="http://blog.povilasb.com/posts/rust-first-steps/#rest_code_fe060b3253544badae5307029e132574-6"&gt;&lt;/a&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;do_stuff&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_fe060b3253544badae5307029e132574-7" name="rest_code_fe060b3253544badae5307029e132574-7" href="http://blog.povilasb.com/posts/rust-first-steps/#rest_code_fe060b3253544badae5307029e132574-7"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"Your are running windows!&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_fe060b3253544badae5307029e132574-8" name="rest_code_fe060b3253544badae5307029e132574-8" href="http://blog.povilasb.com/posts/rust-first-steps/#rest_code_fe060b3253544badae5307029e132574-8"&gt;&lt;/a&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_fe060b3253544badae5307029e132574-9" name="rest_code_fe060b3253544badae5307029e132574-9" href="http://blog.povilasb.com/posts/rust-first-steps/#rest_code_fe060b3253544badae5307029e132574-9"&gt;&lt;/a&gt;&lt;span class="cp"&gt;#endif&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/section&gt;</description><category>rust</category><guid>http://blog.povilasb.com/posts/rust-first-steps/</guid><pubDate>Mon, 08 May 2017 05:57:26 GMT</pubDate></item></channel></rss>